﻿@model IntegrateGoogleSignIn.Models.ReportPageVm
@using IntegrateGoogleSignIn.Helpers

@{
    Layout = "~/Views/Shared/_LayoutProPackage.cshtml";
    var timeZone = string.Empty;
    if (TempData["TimeZone"] != null)
    {
        timeZone = TempData["TimeZone"].ToString();
        TempData["TimeZone"] = null;
    }
    var reconvert = CommonFunctions.ConvertTimeZone(StaticValues.TzUk, timeZone, Model.reportCurrentDate);
    var currentDateString = reconvert.ToString("yyyy-MM-dd");
    var count_google_multi = 0;
    var count_facebook_multi = 0;
    var count_bing_mulit = 0;
    var count_youtube_mulit = 0;
    var count_linkedin_mulit = 0;
    var count_instagram_mulit = 0;
    var count_yahoo_multi = 0;
    var count_pinterest_mulit = 0;
    var count_twitter_multi = 0;
    var count_google_all = 0;
    var count_facebook_all = 0;
    var count_bing_all = 0;
    var count_youtube_all = 0;
    var count_linkedin_all = 0;
    var count_pinterest_all = 0;
    var count_instagram_all = 0;
    var count_yahoo_all = 0;
    var count_twitter_all = 0;
    var sType = string.Empty;
    var multiPageUserArrayGoogle = new List<long>();
    var multiPageUserArrayFacebook = new List<long>();
    var multiPageUserArrayInstagram = new List<long>();
    var multiPageUserArrayBing = new List<long>();
    var multiPageUserArrayYoutube = new List<long>();
    var multiPageUserArrayLinkedin = new List<long>();
    var multiPageUserArrayPinterest = new List<long>();
    var multiPageUserArrayYahoo = new List<long>();
    var multiPageUserArrayTwitter = new List<long>();
    var locationList = new List<string>();
    var sourceList = new List<string>();
    var durationList = new List<string>();
}
@{
    Layout = "~/Views/Shared/_LayoutProPackage.cshtml";
}

<link rel="stylesheet" href="~/Content/rotate.css" />
<link href="~/Content/dc.css" rel="stylesheet" type="text/css">
<link href="~/Content/styles.css" rel="stylesheet" type="text/css">
<link href="~/Content/sidebar.css" rel="stylesheet" type="text/css">

<link
			rel="stylesheet"
			href="https://cdn.materialdesignicons.com/4.9.95/css/materialdesignicons.min.css"
		/>


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />

<script src="~/Scripts/highcharts.js"></script>
<title>Report All</title>
<style>
    .target {
        display: inline;
    }

    .bootstrap-tagsinput {
        width: 100%;
        text-align: left;
        height: 50px;
    }

    .main-wrap ul li a {
        display: contents;
    }

    ul {
        list-style: none;
    }

    .btn_popup_close {
        margin-right: 7px;
        padding: 2px;
        background-color: white;
        color: black;
        border-radius: 50%;
        font-size: 10px;
        width: 22px;
        border: 1px solid black;
    }

    #blueList, #redList, #greenList, #pinkList {
        margin-top: 5px;
    }

        #blueList li, #redList li, #greenList li, #pinkList li {
            margin-right: 1%;
        }

        #blueList i:hover, #redList i:hover, #greenList i:hover, #pinkList i:hover {
            cursor: pointer;
        }

    #search ul li, #search ul {
        border: 0px none red;
        float: none;
        padding: 0px;
        margin: 0px;
        display: block;
    }

    .redBack {
        background-color: red;
        color: white;
        font-weight: bolder;
    }

    .blueBack {
        background-color: blue;
        color: white;
        font-weight: bolder;
    }

    .greenBack {
        background-color: green;
        color: white;
        font-weight: bolder;
    }

    .pinkBack {
        background-color: pink;
        color: white;
        font-weight: bolder;
    }

    .badge-pink {
        background-color: pink !important;
        color: white !important;
    }

    .hideCollection, .hideEarlierCollection, .earlierVisitor {
        display: none;
    }

        .hideCollection.active, .hideEarlierCollection.active, .earlierVisitor.active {
            display: block;
        }

    .cli.active {
        background: green !important;
        color: white !important;
    }

    .filterKeywords.activated {
        
    }

    .all {
        border: 3px solid #00704b ;
    }

    .all2 {
        border: 3px solid #ffab25;
    }

    .all3 {
        border: 3px solid #f65b00;
    }

    .all4 {
        border: 3px solid black;
    }

    .all5 {
        border: 3px solid #a20029;
    }

    .cli {
        background: black !important;
        color: white !important;
    }

        .cli > a {
            border: none !important;
            background: none !important;
            color: white !important;
        }

    .ckeywordstatus > .visitor_image:hover, .btnALLKeyword:hover {
        cursor: pointer;
    }



    .ckeywordstatus.active {
        border-bottom: 4px solid red;
        text-align: center;
    }

    .ckeywordstatus {
        border: none;
    }

    .panelVisitors.diactivate {
        display: none;
    }

    .panelVisitors {
        display: flex;
    }

    #divLoading {
        display: none;
    }

        #divLoading.show {
            display: block;
            position: fixed;
            z-index: 100;
            background-image: url('../../../../Content/3.gif');
            background-color: #666;
            opacity: 0.4;
            background-repeat: no-repeat;
            background-position: center;
            left: 0;
            bottom: 0;
            right: 0;
            top: 0;
        }

    #loadinggif.show {
        left: 50%;
        top: 50%;
        position: absolute;
        z-index: 101;
        width: 32px;
        height: 32px;
        margin-left: -16px;
        margin-top: -16px;
    }

    div.content {
        width: 1000px;
        height: 1000px;
    }

    body {
    }

    .target, .commonSize12 {
        font-size: 12px;
    }

    .commonSize13 {
        font-size: 13px;
    }

    .pathText {
        font-size: 11px;
    }

    .bootstrap-tagsinput {
        max-width: 100% !important;
        line-height: 38px;
    }

    .label {
        padding: .4em .9em .5em;
        font-size: 100%;
        font-weight: 300;
    }

    .left-col {
        padding-right: 0 !important;
    }

        .left-col .col {
            border-radius: 8px !important;
        }



    .panel-body {
        background-color: #FFF !important;
    }
        
    .dot_2, .dot_blue, .dot_red, .dot_green {
        border-radius: 4px !important;
    }
    .dot_acc {
        background-color:#00b7f0 !important;
        height:10px;
        width:10px;
        display:inline-block;
    }
    .dot_multi {
        background-color:#006a8b;
        height:10px;
        width:10px;
        display:inline-block;
    }
   
    .dot_pink {

        background-image:url(../../Content/visitor_comparison/user_pink.png);
        height: 20px;
    width: 20px;
    display: inline-block;
        background-color:#ff0044 !important;
        border-radius:4px !important;
    }

    .cshare {
        background-color: #eaeaea !important;
        padding: 4px !important;
    }

        .cshare .glyphicon {
            font-size: 9px !important;
        }



    .btnEarlier {
        float: right !important;
    }




    .col {
        background-color: #fff !important;
    }

    .visitorcollection {
        margin-left: 20px;
    }

    .panel-heading {
        background-color: #fff;
    }

    .pointer, .filterKeywords {
        cursor: pointer;
    }

    i:hover {
        cursor: pointer;
    }

    .bootstrap-tagsinput > input {
        height: 100%;
    }
</style>
<style>
    #greenSocial, #greenTagsCount, .tblTagCount {
        font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

        #greenSocial td, #greenSocial th, #greenTagsCount td, #greenTagsCount th, .tblTagCount td, .tblTagCount th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        #greenSocial tr:nth-child(even), #greenTagsCount tr:nth-child(even), .tblTagCount tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #greenSocial tr:hover, #greenTagsCount tr:hover, .tblTagCount tr:hover {
            background-color: #ddd;
        }

        #greenSocial th, #greenTagsCount th, .tblTagCount th {
            text-align: left;
            background-color: #4CAF50;
            color: white;
        }

    #newTags li {
        background-color: #3c3c3c;
        color: white;
        padding: 5px;
        margin-left: 5px;
    }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="/Content/visitor_comparison/style.css" rel="stylesheet" type="text/css" />
<link href="~/Content/bootstrap-tagsinput.css" rel="stylesheet" />
<div id="divLoading"></div>
<div class="filter-selector navbar-inverse" style="height:142px; background:#f8f9fa;">
    <div class="container paddingleftt">
        <ul style="justify-content:flex-start;width: 113%;display: inline-block;margin-top:5%;">
		
		
		
		
		
		
		
				<aside class="sidebar">
			<nav>
				<ul class="sidebar__nav">
				
					<li>
						<a href="/Propackage/SpecialUsers" class="sidebar__nav__link">
							<i class="mdi mdi-account-plus"></i>
							<span class="sidebar__nav__text">Add users</span>
						</a>
					</li>
			
					<li>
						<a href="/Home/FAQs" class="sidebar__nav__link">
							<i class="mdi mdi-comment-text-outline"></i>
							<span class="sidebar__nav__text">FAQs</span>
						</a>
					</li>
					<li>
						<a href="/Home/ContactUs" class="sidebar__nav__link">
							<i class="mdi mdi-email-outline"></i>
							<span class="sidebar__nav__text">Contact us</span>
						</a>
					</li>
					<li>
						<a href="/Auth/ProSignOut" class="sidebar__nav__link">
							<i class="mdi mdi-power"></i>
							<span class="sidebar__nav__text">Logout</span>
						</a>
					</li>
				</ul>
			</nav>
		</aside>
		
		
		
		
		
		
		
		
		
		
		
		
            <li class="extralargetext charcoal reportmargintopb">Daily Report</li>



            <div class="whitebg border date"><span><input style="height: 40px; color: #fff;border: 0px;padding-right: 5px;background-color: #0e0d0e;border-radius: 8px;width:90%;text-align:center;" onchange="ApplyFilter()" id="StartDate" type="date" value="@currentDateString"></span></div>
            <br />

            <li class="regulartext charcoal">@Model.domainName</li>
            <br />

        </ul>
        @*<button style="background-color: #ffa937; border-color: #edb415;" class="btn btn-success" onclick="Report()">multi page visitors</button>*@
        @*<label style="float:right;color: black;display: inline;margin-top: 30px;">@Model.domainName</label>*@
    </div>
</div>

@Html.Hidden("currentStringDate", Model.reportCurrentDate.ToString("d"))

<div class="container body-content">
    <div class="main-wrap ">
        <div class="header-top text-center">
            <div class="row" style="background-color:#f8f9fa;">
                <div class="row marginlefts"><hr></div>
                <div class="col-md-9">
                    <div>

                        <h4 class="regulartext charcoal alignleft">
                            Number of daily visitors &nbsp;&nbsp;&nbsp;
                            <span class="pointer plus hidemobile charcoal" data-toggle="modal" data-target="#videomodel"><i class="mdi mdi-play-circle"></i></span> <span class="xsmalltext aligncenter charcoal hidemobile">Let us show you around</span>
                        </h4> 
                        <br />

                        <div id="hourly" class="ulData pagebg chartouter">
                            <div id="lineGraph" style="" class="chart whitebg border radiusl"></div>
                        </div>
                        <div class="whitebg border radiusl margintop showmeouter">
                            <button class="margintb whitefont radiusl charcoalbg showmebutton bordernone regulartext" class="btn" onclick="Report()">Show all visitors</button>
                        </div>

                        <div class="row" style="background-color:#f8f9fa;padding-top: 2%;">
                            <div class="boxes marginleft">


                                @{
                                    var actualUserCollections1 = Model.userListing.ToList();
                                    var multipageVisitorCollections1 = Model.userListing.Where(m => !m.isSinglePageUser).ToList();
                                    var actualUserCollections = Model.userListing.Where(m => !m.isSinglePageUser && m.userInteractions.Any(p => p.Visits.Count > 1 && p.Visits.Any(k => k.durationTime > 0))).ToList();
                                    var multipageVisitorCollections = Model.userListing.Where(m => !m.isSinglePageUser).ToList();
                                    var singleVisitorCollections = Model.userListing.Where(m => m.isSinglePageUser).ToList();

                                }
                                <div class="d-inline bg-success bluebg radius bluebox aligncenter">


                                    <span class="largetext whitefont">@actualUserCollections.Count</span>
                                    <span class="pointer plus hidemobile hidedesktop whitefont" data-toggle="modal" data-target="#myModalall">&#9776;</span>
                                    <br />
                                    <span class="standardtext whitefont">&nbsp;</span>

                                    <div class="borderbottom"></div>
                                    <div class="standardtext whitefont">Visitors</div>


                                </div>
                            </div>


                            <div class="boxes marginleft">
                                <div class="d-inline bg-success darkredbg radius aligncenter">

                                    <span class="largetext whitefont paddingtops" id="btnbluevisitor">0</span>
                                    <span class="pointer plus hidemobile hidedesktop whitefont" data-toggle="modal" data-target="#myModalBlue">&#9776;</span>

                                    <br />
                                    <div class="whitefont borderbottom standardtext">Visitors</div>
                                    <div class="whitefont standardtext paddingbottoms" data-toggle="collapse" data-target="#Social">from adverts&nbsp;&nbsp;<div class="glyphicon glyphicon-chevron-down pointer hidemobile"></div></div>
                                    <div id="Social" class="collapse darkredbg standardtext whitefont paddingtops paddingbottoms bordertop">
                                        This shows the number of people who have come from your adverts.
										<p></p>
								
								 <p></p>
                                    </div>

                                </div>




                            </div>

                            <div class="boxes marginleft">
                                <div class="d-inline bg-success redbg radius aligncenter">

                                    <span class="largetext whitefont" id="btnpinkvisitor">0</span>

                                    <span class="pointer whitefont hidemobile hidedesktop" data-toggle="modal" data-target="#myModalPink">&#9776;</span>

                                    <br />
                                    <div class="whitefont borderbottom standardtext">Visitors</div>
                                    <div class="whitefont standardtext paddingbottoms" data-toggle="collapse" data-target="#Social1">viewed a product&nbsp;&nbsp;<div class="glyphicon glyphicon-chevron-down pointer hidemobile"></div></div>
                                    <div id="Social1" class="collapse redbg standardtext whitefont paddingtops paddingbottoms bordertop">
                                        This is the number of people viewing your products.
										<p></p>
							
								 <p></p>
                                    </div>

                                </div>
                            </div>
                            <div class="boxes marginleft">
                                <div class="d-inline bg-success orangebg radius aligncenter">
                                    <span class="largetext whitefont" id="btnredvisitor">0</span>

                                    <span class="pointer whitefont hidemobile hidedesktop" data-toggle="modal" data-target="#myModalRed">&#9776;</span>

                                    <br />
                                    <div class="whitefont borderbottom standardtext">Visitors</div>
                                    <div class="whitefont standardtext paddingbottoms" data-toggle="collapse" data-target="#Social2">reach checkout&nbsp;&nbsp;<div class="glyphicon glyphicon-chevron-down pointer hidemobile"></div></div>
                                    <div id="Social2" class="collapse orangebg standardtext whitefont paddingtops paddingbottoms bordertop">
                                        This is the number of visitors who have reached your checkout.
										<p></p>
							
								 <p></p>
                                    </div>

                                </div>
                            </div>
                            <div class="boxes marginleft">
                                <div class="d-inline bg-success yellowbg radius aligncenter">
                                    <span class="largetext whitefont" id="btngreenvisitor">0</span>

                                    <span class="pointer whitefont hidemobile hidedesktop" data-toggle="modal" data-target="#myModalGreen">&#9776;</span>

                                    <br />
                                    <div class="whitefont borderbottom standardtext">Customers</div>
                                    <div class="whitefont standardtext paddingbottoms" data-toggle="collapse" data-target="#Social3">made a transaction&nbsp;&nbsp;<div class="glyphicon glyphicon-chevron-down pointer hidemobile"></div></div>
                                    <div id="Social3" class="collapse yellowbg standardtext whitefont paddingtops paddingbottoms bordertop">
                                        This is the number of visitors who have purchased your products.
										<p></p>
							

								 <p></p>
                                    </div>


                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pie">
                    <div class="whitebg border radiusl standardtext alignleft">
                        <div style="margin-top:3%;">
                            <span class="dot_acc" style="margin-left:4%"></span>
                            <span class="paddingl" style="padding-top:3%;">Curious visitors</span><br />
                            <span class="dot_multi" style="margin-left:4%"></span>
                            <span class="paddingl" style="padding-top:3%;">Genuine visitors</span>
                        </div>
                        <div id="pieChart" style="min-width: 280px; height: 280px; max-width: 280px; margin: 0 auto;margin-top:6%;"></div>
                    </div>
                    <br />
                    <div class="border radiusl whitebg standardtext charcoal" style="width:100%;">

                        <div class="borderbottomg">
                            <div class="btn standardtext" data-toggle="collapse" data-target="#demo"><b>Visitors</b><span style="padding-left:164%;" class="glyphicon glyphicon-chevron-down hidemobile"></span></div>
                            <div id="demo" class="collapse">
                                This is a combination of your genuine and curious visitors on a selected day.
								<p></p>
						
                            </div>
                        </div>
                        <div class="borderbottomg">
                            <div class="btn standardtext" data-toggle="collapse" data-target="#demo1"><b>Genuine visitor</b> <span style="padding-left:72%;" class="glyphicon glyphicon-chevron-down hidemobile"></span></div>
                            <div id="demo1" class="collapse">
                                A genunie visitor is someone who has viewed more than a single page on your site on at least one visit (session) during the day you selected.
								<p></p>
							
                            </div>
                        </div>
                        <div class="borderbottomg">
                            <div class="btn standardtext" data-toggle="collapse" data-target="#demo2"><b>Curious visitor</b> <span style="padding-left:75%;" class="glyphicon glyphicon-chevron-down hidemobile"></span></div>
                            <div id="demo2" class="collapse">
                                This is someone curious enough to spend at least a minimum of 1 second on your site. However they have left without exploring your site or view your products.
								<p></p>
							
                            </div>
                        </div>
                        <div>
                            <div class="btn standardtext" data-toggle="collapse" data-target="#demo3"><b>Accidental visitor</b> <span style="padding-left:58%;" class="glyphicon glyphicon-chevron-down hidemobile"></span></div>
                            <div id="demo3" class="collapse">
                               This is someone who has accidentally clicked a link on your site and left under 1 second not even giving your site a chance to load.
							   <p></p>
								
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row marginlefts"><hr></div>
<div class="aligncenter standardtext charcoal hidedesktop">To view a full report including your visitor comparison tool, please view on a desktop or laptop</div>

            <div class="row">
                <div class="col-md-12 hidemobile">



                    <div class="extralargetext charcoal" style="padding-top:103px;">Find and compare visitors</div>
					<p></p>
				<br>
					<span class="pointer plus hidemobile charcoal largetext" data-toggle="modal" data-target="#videomode2"><i class="mdi mdi-play-circle"></i></span>
					
				<br>
					<span class="xsmalltext aligncenter charcoal">See how to use this tool</span>

                    <div class="row">
                        <div class="col-md-12">
                            <script>
                                $("#img1").hide();
                                $("#img2").hide();
                                $("#img3").hide();

                                function GetCount(str, c_counted) {
                                    $("#img" + c_counted).show();


                                    var query = '';

                                    var startDate = document.getElementById("StartDate").value;
                                    if (startDate != null) {
                                        query += "startDate=" + startDate + "&";
                                    }


                                    if (startDate != null) {
                                        query += "endDate=" + startDate + "&";
                                    }

                                    var city = document.getElementById('CityControl').value;

                                    if (city != null && city != "") {
                                        query += "city=" + city;
                                    }

                                    var path = str;//document.getElementById(str).innerText;

                                    //if (path != null && path != "") {
                                    //    query += "path=" + path;
                                    //}

                                    var tempUrlWithViewId = document.URL.split('&')[0] + "&" + query;
                                    var urlis = tempUrlWithViewId.replace("GetReports", "GetCountReports");
                                    //alert(urlis);
                                    if (query != '') {


                                        $.post(urlis, { path: path }, function (data) {
                                            $("#loadergif").hide();


                                            $("#_selected" + c_counted).html(data);
                                        });
                                    }
                                }

                                var count = 0;
                            </script>


                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="row hidemobile" style="padding-top:24px;">

            <div class="col-md-12 col-xs-12 col-lg-12" style="text-align:center;padding-top:10px;">
                <div class="filtera radiusl border whitebg" ">
                    <div class="row" style="padding-top:3%;">
                        <div class="col-md-4">
                            <div class="form-group">

                                <select id="drpLocationList" data-tag="location" style="background-color:#fff;" class="form-control filterDropdown">
                                    <option selected value="ALL">Location</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">

                                <select id="drpSourceList" data-tag="source" style="background-color:#fff;" class="form-control filterDropdown">
                                    <option selected value="All">Source</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">

                                <select id="drpDurationList" data-tag="duration" style="background-color:#fff;" class="form-control filterDropdown">
                                    <option selected value="All">Duration</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="filterb border radiusl whitebg paddingtb standardtext">
                    <div>
                        <span data-type="all" class="filterKeywords activated standardtext" onclick="SetFilterColor('all')">

                        </span>
                        <span data-type="blue" class="filterKeywords  standardtext" onclick="SetFilterColor('blue')" style="display: inline-block;background: #00a26d;color: #fff;width: 35px;text-align: center;padding: 5px 0;width:24.5%;border-radius:3px;">
                            Adverts & posts
                        </span>
                        <span data-type="pink" class="filterKeywords standardtext" onclick="SetFilterColor('pink')" style="display: inline-block;background: #ff0044;color: #fff;width: 35px;text-align: center;padding: 5px 0;width:24.5%;border-radius:3px;">
                            Product views
                        </span>
                        <span data-type="red" class="filterKeywords standardtext" onclick="SetFilterColor('red')" style="display: inline-block;background: #f65b00;color: #fff;width: 35px;text-align: center;padding: 5px 0;width:24.5%;border-radius:3px;">
                            Checkout
                        </span>
                        <span data-type="green" class="filterKeywords standardtext" onclick="SetFilterColor('green')" style="display: inline-block;background: #ffab25;color: #fff;width: 35px;text-align: center;padding: 5px 0;width:24.5%;border-radius:3px;">
                            Customers
                        </span>
                    </div>
                </div>
            </div>

            <div class="search" style="padding-top:2%;">
                <input value="@string.Empty" data-role="tagsinput" type="text" class="text-left radiusl" style="padding-top:10px;" id="Search" placeholder="Search by page title / URL">
            </div>

            <div class="reset text-center" style="padding-top:2%;">
                <span data-type="all" class="filterKeywords resetbutton radiusl standardtext charcoalbg whitefont aligncenter paddingtb" onclick="RemoveAllFilter()">
                    RESET ALL
                </span>
            </div>

            <div class="whitebg border radiusl margintop total paddingtb aligncenter">
                <label class="charcoalbg radiusl extralargetext whitefont" style="width: 90%;margin-top:1%;">
                    <span id="c_counted1" class="extralargetext whitefont aligncenter">@actualUserCollections.Count</span>
                </label>
            </div>
        </div>
        <div style="padding-top:19px;">

        </div>

        @if (Model.userListing.Any())
        {
            var dynamicNumber = 0;
            var item_counter = 0;
            foreach (var user in actualUserCollections)
            {
                item_counter++;
                <div class="filter-search panelVisitors radiusl">
                    @if (user.isSinglePageUser)
                    {
                        <input type="hidden" class="visitorSingleType" value="single" />

                    }
                    else
                    {
                        <input type="hidden" class="visitorSingleType" value="multi" />
                    }
                    <div class="left-col radiusl hidemobile">
                        <input type="hidden" class="userID" value="@user.id" />
                        <div class="panel col ulData radiusl">
                            <div class="charcoalbg panel-heading radiustl">
                                <div class="row">
                                    <div class="panela charcoalbg">
                                        <div class="visitor">
                                            <div style="width: 100%;display: initial;">
                                            </div>
                                            <span class="visitor-total regulartext" style="color:#FFF">Visitor @user.id</span>
                                            <div class="visitorcollection" style="width: 100%;display: initial;">
                                            </div>
                                        </div>
                                    </div>
                                    @{
                                        var mobileOption = (!string.IsNullOrEmpty(user.mobile) && user.mobile == "True") ? "(Mobile Data)" : "(Wifi)";
                                    }
                                    <div class="panelb pagebg smalltext">Connection:<span class="smalltext bluefont">  @mobileOption  </span> </div>
                                    <div class="panelb pagebg smalltext">
                                        @{
                                            var totalMinDuration = Math.Floor(user.duration);
                                            var duration = string.Empty;
                                            if (totalMinDuration < 60)
                                            {
                                                duration = "under 1 min";
                                            }
                                            else if (totalMinDuration < 120)
                                            {
                                                duration = "over " + 1 + " min";
                                            }
                                            else if (totalMinDuration < 180)
                                            {
                                                duration = "over " + 2 + " min";
                                            }
                                            else if (totalMinDuration < 240)
                                            {
                                                duration = "over " + 3 + " min";
                                            }
                                            else if (totalMinDuration < 300)
                                            {
                                                duration = "over " + 4 + " min";
                                            }
                                            else
                                            {
                                                duration = "over " + 5 + " min";
                                            }

                                            if (!durationList.Contains(duration))
                                            {
                                                durationList.Add(duration.ToLower());
                                            }
                                            durationList.Add(duration);
                                        }

                                        <div class="target txtmobile">
                                            <span style="color: #3c3c3c;" class="smalltext">Duration: </span> <span class="text-danger txtDuration smalltext" style="color: #00b7f0;"> @duration</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="panel-body radiusbl" id="panelBody_@user.id">
                                @{
                                    var userCollectionLoop = user.userInteractions.ToList();
                                    var loop = userCollectionLoop.Count;
                                    var counterLoop = 0;
                                    var needToHide = false;
                                    var showMoreButton = false;
                                }
                                @foreach (var sessionCollection in userCollectionLoop)
                                {
                                    dynamicNumber++;
                                    var hasData = false;
                                    counterLoop++;
                                    if (loop != counterLoop)
                                    {
                                        hasData = true;
                                    }

                                    var e = 0;
                                    var totalCollection = sessionCollection.Visits.Count;
                                    foreach (var item in sessionCollection.Visits)
                                    {
                                        e++;

                                        <div class="row @((counterLoop > 1) ? "earlierVisitor earlierVisitor_" + user.id + "" : string.Empty) @((e > 2) || (needToHide) ? "hideCollection hideCollection_" + user.id + "" : string.Empty)" style="margin-bottom: 5px;">
                                            <div class="panelc pagebg regulartext">
                                                @if (e == 1 && item.sessionDatetime.HasValue)
                                                {
                                                    if (e == 1)
                                                    {
                                                        <span class="smalltext">Session Start</span>
                                                        <br />
                                                        <span class="smalltext" style="color: #00b7f0;">@item.sessionDatetime.Value.ToString("hh:mm tt")</span>
                                                        <span class="sessionStartTime" style="display: none">@item.sessionDatetime.Value.ToString("HH:mm")</span>
                                                    }
                                                }
                                                else
                                                {
                                                    if (totalCollection == e)
                                                    {
                                                        <span class="commonSize12">Session End</span>
                                                    }
                                                    else
                                                    {
                                                        <span>&nbsp;</span>
                                                    }
                                                }
                                            </div>
                                            <div class="col-md-7 col-xs-7 col-lg-7">
                                                <div class="col-md-1 col-xs-1 col-lg-1">
                                                    <span class="countColor dot_2" cust-data="ii_@item_counter"></span>
                                                </div>
                                                <div class="titleurl smalltext">
                                                    <div class="target row smalltext" style="margin: 0px;">@item.title</div>

                                                    <div style="margin: 0%; color: #00b7f0;" class="xsmalltext pathText target row">
                                                        @{
                                                            var splitURL = item.url.Split('/');
                                                            var totallength = splitURL.Length;
                                                            var urlToDisplay = "Home Page";
                                                            if (totallength == 4)
                                                            {
                                                                if (!string.IsNullOrEmpty(splitURL[totallength - 1]))
                                                                {
                                                                    urlToDisplay = splitURL[totallength - 1];
                                                                }
                                                            }
                                                            else if (totallength > 4)
                                                            {
                                                                if (!string.IsNullOrEmpty(splitURL[totallength - 1]))
                                                                {
                                                                    urlToDisplay = splitURL[totallength - 1];
                                                                }
                                                                else
                                                                {
                                                                    urlToDisplay = splitURL[totallength - 2];
                                                                }
                                                            }
                                                        }
                                                        @if (urlToDisplay.Length > 39)
                                                        {
                                                            urlToDisplay = string.Concat("/", urlToDisplay.Substring(0, 40));
                                                        }
                                                        else
                                                        {
                                                            urlToDisplay = string.Concat("/", urlToDisplay);
                                                        }
                                                        @urlToDisplay
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="timebox">
                                                <div style="width: 100%">
                                                    <div class="target smalltext">
                                                        @{
                                                            var convertedSpan = new TimeSpan(0, 0, (int)item.durationTime);
                                                            var durationString = string.Empty;
                                                            if (convertedSpan.Minutes > 0)
                                                            {
                                                                if (convertedSpan.Seconds > 0)
                                                                {
                                                                    durationString = convertedSpan.Minutes + " min " + convertedSpan.Seconds + " sec";
                                                                }
                                                                else
                                                                {
                                                                    durationString = convertedSpan.Minutes + " min ";
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (convertedSpan.Seconds > 0)
                                                                {
                                                                    durationString = convertedSpan.Seconds + " sec";
                                                                }
                                                            }
                                                        }
                                                        @durationString
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        if (totalCollection > 2 || hasData)
                                        {
                                            showMoreButton = true;
                                        }



                                        if (e > 2)
                                        {
                                            if (loop != counterLoop)
                                            {
                                                hasData = true;
                                            }
                                            else
                                            {
                                                needToHide = false;
                                            }
                                        }
                                    }
                                }

                                @if (showMoreButton)
                                {

                                    <div class="row" style="margin-top: 10px; margin-bottom: 10px;">
                                        <div class="col-md-2 col-xs-2 col-lg-2">
                                            &nbsp;
                                        </div>
                                        <div class="col-md-10 col-xs-10 col-lg-10">
                                            <button type="button" class="btn btn-xs btn_css_footer btn_c_load_more btnLoad smalltext" onclick="LoadMore(@user.id, this)">Load ALL</button>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="right-col hidemobile">
                        <div class="panel col">
                            <div class="charcoalbg radiusl" style="padding-top: 10px; padding-right: 15px; padding-left: 15px; padding-bottom: 15px;">
                                @if (string.IsNullOrEmpty(user.mobile) || user.mobile == "False")
                                {
                                    <div class="row">
                                        <div class="col-md-12 col-xs-12 col-lg-12" style="padding-top: 12px;">
                                            <div>
                                                @if (user.source.Contains("google"))
                                                {
                                                    <img src="~/Content/google.png" alt="" title="" />
                                                }
                                                else if (user.source.Contains("facebook"))
                                                {
                                                    <img src="~/Content/facebook.png" alt="" title="" />
                                                }
                                                else if (user.source.Contains("bing"))
                                                {
                                                    <img src="~/Content/bing.png" alt="" title="" />
                                                }
                                                else if (user.source.Contains("instagram"))
                                                {
                                                    <img src="~/Content/instagram.png" alt="" title="" />
                                                }
                                                else if (user.source.Contains("yahoo"))
                                                {
                                                    <img src="~/Content/yahoo.png" alt="" title="" />

                                                }
                                                else if (user.source.Contains("youtube"))
                                                {
                                                    <img src="~/Content/youtube.png" alt="" title="" />

                                                }
                                                else if (user.source.Contains("Pinterest"))
                                                {
                                                    <img src="~/Content/pinterest.png" alt="" title="" />

                                                }
                                                else if (user.source.Contains("Linkedin"))
                                                {
                                                    <img src="~/Content/linkedin.png" alt="" title="" />

                                                }
                                                else if (@user.source.Contains("https://t.co") || @user.source.Contains("l.t.co/"))
                                                {
                                                    <img src="~/Content/twitter.png" alt="" title="" />
                                                }
                                            </div>
                                            <br>


                                            <div class="target" style="color: #FFF; padding-left: 3px;">
                                                @if (!string.IsNullOrEmpty(user.source))
                                                {
                                                    var sourceValue = string.Empty;
                                                    sType = string.Empty;
                                                    if (user.source.Contains("google"))
                                                    {
                                                        sType = "google";
                                                        sourceValue = "Google";
                                                        count_google_all = count_google_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayGoogle.Add(user.id.Value);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            count_google_multi = count_google_multi + 1;
                                                        }
                                                        <label class="smalltext txtSource">Google</label>
                                                    }
                                                    else if (@user.source.Contains("m.facebook.com") || @user.source.Contains("l.facebook.com") || @user.source.Contains("facebook.com"))
                                                    {
                                                        sType = "facebook";
                                                        sourceValue = "FaceBook";
                                                        count_facebook_all = count_facebook_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayFacebook.Add(user.id.Value);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            count_facebook_multi = count_facebook_multi + 1;
                                                        }
                                                        <label class="smalltext txtSource">Facebook</label>
                                                    }
                                                    else if (@user.source.Contains(Model.domainName))
                                                    {
                                                        sourceValue = "Direct";
                                                        <label class="smalltext txtSource">Direct</label>
                                                    }
                                                    else if (@user.source.Contains("http://www.phileasfoggs.co.uk/") || @user.source.Contains("https://www.phileasfoggsworldofadventures.co.uk/"))
                                                    {
                                                        sourceValue = "Direct";
                                                        <label class="smalltext txtSource">Direct</label>
                                                    }
                                                    else if (@user.source.Contains("bing"))
                                                    {
                                                        sourceValue = "Bing";
                                                        sType = "bing";
                                                        count_bing_all = count_bing_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayBing.Add(user.id.Value);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            count_bing_mulit = count_bing_mulit + 1;
                                                        }
                                                        <label class="smalltext txtSource">Bing</label>
                                                    }
                                                    else if (@user.source.Contains("youtube"))
                                                    {
                                                        sourceValue = "Youtube";
                                                        sType = "youtube";
                                                        count_youtube_all = count_youtube_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayYoutube.Add(user.id.Value);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            count_youtube_mulit = count_youtube_mulit + 1;
                                                        }
                                                        <label class="smalltext txtSource">Youtube</label>
                                                    }
                                                    else if (@user.source.Contains("pinterest"))
                                                    {
                                                        sourceValue = "Pinterest";
                                                        sType = "pinterest";
                                                        count_pinterest_all = count_pinterest_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayPinterest.Add(user.id.Value);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            count_pinterest_mulit = count_pinterest_mulit + 1;
                                                        }
                                                        <label class="smalltext txtSource">Pinterest</label>
                                                    }
                                                    else if (@user.source.Contains("linkedin"))
                                                    {
                                                        sourceValue = "Linkedin";
                                                        sType = "linkdin";
                                                        count_linkedin_all = count_linkedin_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayLinkedin.Add(user.id.Value);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            count_linkedin_mulit = count_linkedin_mulit + 1;
                                                        }
                                                        <label class="smalltext txtSource">Linkedin</label>
                                                    }
                                                    else if (@user.source.Contains("instagram"))
                                                    {
                                                        sourceValue = "Instagram";
                                                        sType = "instagram";
                                                        count_instagram_all = count_instagram_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayInstagram.Add(user.id.Value);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            count_instagram_mulit = count_instagram_mulit + 1;
                                                        }
                                                        <label class="smalltext txtSource">Instagram</label>
                                                    }
                                                    else if (@user.source.Contains("yahoo"))
                                                    {
                                                        sourceValue = "Yahoo";
                                                        sType = "yahoo";
                                                        count_yahoo_all = count_yahoo_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayYahoo.Add(user.id.Value);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            count_yahoo_multi = count_yahoo_multi + 1;
                                                        }
                                                        <label class="smalltext txtSource">Yahoo</label>
                                                    }
                                                    else if (@user.source.Contains("https://t.co") || @user.source.Contains("l.t.co/"))
                                                    {
                                                        sourceValue = "Twitter";
                                                        <label class="smalltext txtSource">Twitter</label>
                                                    }
                                                    else
                                                    {
                                                        var finalSource = string.Empty;
                                                        if (user.source.StartsWith("http://"))
                                                        {
                                                            finalSource = user.source.Substring("http://".Length);
                                                        }

                                                        if (user.source.StartsWith("https://"))
                                                        {
                                                            finalSource = user.source.Substring("https://".Length);
                                                        }

                                                        if (user.source.Contains("www."))
                                                        {
                                                            finalSource = finalSource.Substring("www.".Length);
                                                        }

                                                        if (finalSource.Length > 41)
                                                        {
                                                            sourceValue = finalSource.Substring(0, 40);
                                                            <label class="smalltext txtSource">@sourceValue</label>
                                                        }
                                                        else
                                                        {
                                                            sourceValue = finalSource;
                                                            <label class="smalltext txtSource">@finalSource</label>
                                                        }
                                                    }
                                                    if (!sourceList.Contains(sourceValue))
                                                    {
                                                        sourceList.Add(sourceValue.ToLower());
                                                    }
                                                }
                                                else
                                                {
                                                    if (!sourceList.Contains("Direct"))
                                                    {
                                                        sourceList.Add("Direct".ToLower());
                                                    }
                                                    <label class="smalltext txtSource">Direct</label>
                                                }
                                            </div>
                                            <input class="socialmedia" type="hidden" value="@sType" />
                                        </div>
                                        <div class="col-md-12 col-xs-12 col-lg-12" style="padding-top: 12px;">


                                            @{
                                                var countryStr = string.Empty;
                                                var locationArray = user.location.Split(',').Select(p => p.Trim()).ToArray();
                                                if (locationArray.Length > 0)
                                                {
                                                    countryStr = locationArray[0].Trim();
                                                }
                                            }
                                            <div class="target txtCountry smalltext" style="color: #FFF; padding-left: 3px;">@countryStr</div>
                                        </div>
                                        <div class="col-md-12 col-xs-12 col-lg-12" style="padding-top: 12px;">

                                            @{
                                                var cityStr = string.Empty;
                                                if (locationArray.Length > 1)
                                                {
                                                    cityStr = locationArray[1].Trim();
                                                }
                                            }
                                            <div class="target txtRegion smalltext" style="color: #FFF; padding-left: 3px;"> @cityStr</div>
                                        </div>
                                        <div class="col-md-12 col-xs-12 col-lg-12" style="padding-top: 12px;">

                                            @{
                                                var city1 = string.Empty;
                                                if (locationArray.Length > 2)
                                                {
                                                    city1 = locationArray[2].Trim();
                                                    if (!string.IsNullOrEmpty(city1) && !locationList.Contains(city1))
                                                    {
                                                        locationList.Add(city1.ToLower());
                                                    }
                                                }
                                            }
                                            <div class="target txtCity smalltext" style="color: #FFF; padding-left: 3px;"> @city1</div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="row">
                                        <div class="col-md-12 col-xs-12 col-lg-12" style="padding-top: 12px;">
                                            <div>
                                                @if (user.source.Contains("google"))
                                                {
                                                    <img src="~/Content/google.png" alt="" title="" />
                                                }
                                                else if (user.source.Contains("facebook"))
                                                {
                                                    <img src="~/Content/facebook.png" alt="" title="" />
                                                }
                                                else if (user.source.Contains("bing"))
                                                {
                                                    <img src="~/Content/bing.png" alt="" title="" />
                                                }
                                                else if (user.source.Contains("instagram"))
                                                {
                                                    <img src="~/Content/instagram.png" alt="" title="" />
                                                }
                                                else if (user.source.Contains("yahoo"))
                                                {
                                                    <img src="~/Content/yahoo.png" alt="" title="" />
                                                }
                                                else if (@user.source.Contains("https://t.co") || @user.source.Contains("l.t.co/"))
                                                {
                                                    <img src="~/Content/twitter.png" alt="" title="" />
                                                }

                                            </div>
                                            <br>

                                            <div class="target" style="color: #FFF; padding-left: 3px;">
                                                @if (!string.IsNullOrEmpty(user.source))
                                                {
                                                    var sourceValue = string.Empty;
                                                    sType = string.Empty;
                                                    if (user.source.Contains("google"))
                                                    {
                                                        sType = "google";
                                                        sourceValue = "Google";
                                                        count_google_all = count_google_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayGoogle.Add(user.id.Value);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            count_google_multi = count_google_multi + 1;
                                                        }
                                                        <label class="smalltext txtSource">Google</label>
                                                    }
                                                    else if (@user.source.Contains("m.facebook.com") || @user.source.Contains("l.facebook.com") || @user.source.Contains("facebook.com"))
                                                    {
                                                        sType = "facebook";
                                                        sourceValue = "FaceBook";
                                                        count_facebook_all = count_facebook_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayFacebook.Add(user.id.Value);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            count_facebook_multi = count_facebook_multi + 1;
                                                        }
                                                        <label class="smalltext txtSource">FaceBook</label>
                                                    }
                                                    else if (@user.source.Contains("http://www.phileasfoggs.co.uk/") || @user.source.Contains("https://www.phileasfoggsworldofadventures.co.uk/"))
                                                    {
                                                        sourceValue = "Direct";
                                                        <label class="smalltext txtSource">Direct</label>
                                                    }
                                                    else if (@user.source.Contains("bing"))
                                                    {
                                                        sourceValue = "Bing";
                                                        sType = "bing";
                                                        count_bing_all = count_bing_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayBing.Add(user.id.Value);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            count_bing_mulit = count_bing_mulit + 1;
                                                        }
                                                        <label class="smalltext txtSource">Bing</label>
                                                    }
                                                    else if (@user.source.Contains("youtube"))
                                                    {
                                                        sourceValue = "Youtube";
                                                        sType = "youtube";
                                                        count_youtube_all = count_youtube_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayYoutube.Add(user.id.Value);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            count_youtube_mulit = count_youtube_mulit + 1;
                                                        }
                                                        <label class="smalltext txtSource">Youtube</label>
                                                    }
                                                    else if (@user.source.Contains("linkedin"))
                                                    {
                                                        sourceValue = "Linkedin";
                                                        sType = "linkdin";
                                                        count_linkedin_all = count_linkedin_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayLinkedin.Add(user.id.Value);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            count_linkedin_mulit = count_linkedin_mulit + 1;
                                                        }
                                                        <label class="smalltext txtSource">Linkedin</label>
                                                    }
                                                    else if (@user.source.Contains("pinterest"))
                                                    {
                                                        sourceValue = "Pinterest";
                                                        sType = "pinterest";
                                                        count_pinterest_all = count_pinterest_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayPinterest.Add(user.id.Value);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            count_pinterest_mulit = count_pinterest_mulit + 1;
                                                        }
                                                        <label class="smalltext txtSource">Pinterest</label>
                                                    }
                                                    else if (@user.source.Contains("instagram"))
                                                    {
                                                        sourceValue = "Instagram";
                                                        sType = "instagram";
                                                        count_instagram_all = count_instagram_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayInstagram.Add(user.id.Value);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            count_instagram_mulit = count_instagram_mulit + 1;
                                                        }
                                                        <label class="smalltext txtSource">Instagram</label>
                                                    }
                                                    else if (@user.source.Contains("yahoo"))
                                                    {
                                                        sourceValue = "Yahoo";
                                                        sType = "yahoo";
                                                        count_yahoo_all = count_yahoo_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayYahoo.Add(user.id.Value);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            count_yahoo_multi = count_yahoo_multi + 1;
                                                        }
                                                        <label class="smalltext txtSource">Yahoo</label>
                                                    }
                                                    else if (@user.source.Contains("https://t.co") || @user.source.Contains("l.t.co/"))
                                                    {
                                                        sourceValue = "Twitter";
                                                        sType = "twitter";
                                                        count_twitter_all = count_twitter_all + 1;
                                                        if (user.isSinglePageUser)
                                                        {
                                                            if (user.id.HasValue)
                                                            {
                                                                multiPageUserArrayTwitter.Add(user.id.Value);
                                                            }
                                                            else
                                                            {
                                                                count_twitter_multi = count_twitter_multi + 1;
                                                            }
                                                        }
                                                        <label class="smalltext txtSource">Twitter</label>
                                                    }
                                                    else
                                                    {
                                                        var finalSource = string.Empty;
                                                        if (user.source.StartsWith("http://"))
                                                        {
                                                            finalSource = user.source.Substring("http://".Length);
                                                        }

                                                        if (user.source.StartsWith("https://"))
                                                        {
                                                            finalSource = user.source.Substring("https://".Length);
                                                        }

                                                        if (user.source.Contains("www."))
                                                        {
                                                            finalSource = finalSource.Substring("www.".Length);
                                                        }

                                                        if (finalSource.Length > 41)
                                                        {
                                                            sourceValue = finalSource.Substring(0, 40);
                                                            <label class="smalltext txtSource">@sourceValue</label>
                                                        }
                                                        else
                                                        {
                                                            sourceValue = finalSource;
                                                            <label class="smalltext txtSource">@finalSource</label>
                                                        }
                                                    }
                                                    if (!sourceList.Contains(sourceValue))
                                                    {
                                                        sourceList.Add(sourceValue.ToLower());
                                                    }
                                                }
                                                else
                                                {
                                                    if (!sourceList.Contains("Direct"))
                                                    {
                                                        sourceList.Add("Direct".ToLower());
                                                    }
                                                    <label class="smalltext txtSource">Direct</label>
                                                }
                                                <input class="socialmedia" type="hidden" value="@sType" />
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }

        <input type="hidden" id="multiPageUserArrayGoogle" value="@string.Join(",",multiPageUserArrayGoogle.ToArray())" />
        <input type="hidden" id="multiPageUserArrayFacebook" value="@string.Join(",",multiPageUserArrayFacebook.ToArray())" />
        <input type="hidden" id="multiPageUserArrayInstagram" value="@string.Join(",",multiPageUserArrayInstagram.ToArray())" />
        <input type="hidden" id="multiPageUserArrayBing" value="@string.Join(",",multiPageUserArrayBing.ToArray())" />
        <input type="hidden" id="multiPageUserArrayYoutube" value="@string.Join(",",multiPageUserArrayYoutube.ToArray())"/>
        <input type="hidden" id="multiPageUserArrayLinkedin" value="@string.Join(",",multiPageUserArrayLinkedin.ToArray())" />
        <input type="hidden" id="multiPageUserArrayPinterest" value="@string.Join(",",multiPageUserArrayPinterest.ToArray())" />

        <input type="hidden" id="multiPageUserArrayYahoo" value="@string.Join(",",multiPageUserArrayYahoo.ToArray())" />
        <input type="hidden" id="multiPageUserArrayTwitter" value="@string.Join(",",multiPageUserArrayTwitter.ToArray())" />

        <input type="hidden" id="multiPageUsers" value="" />
        <input type="hidden" id="locationList" value="@String.Join(",",locationList.Distinct().ToArray())" />
        <input type="hidden" id="sourceList" value="@String.Join(",",sourceList.Distinct().ToArray())" />
        <input type="hidden" id="durationList" value="@String.Join(",",durationList.Distinct().ToArray())" />
    </div>
</div>

<div class="modal fade" id="myModalRed" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content" style="width:100%;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>

            </div>
            <div class="modal-body">
                <div class="form-group ">
                    <p class="radius orangebg whitefont" style="width: 80%;height: 44px;padding-top: 0.7%;padding-left: 2%;font-size: 139%;">Track checkout pages</p><br />
<p class="standardtext charcoal">Enter the end part of your checkout pages URL to track that page. eg.&nbsp; <label class="badge badge-danger orangebg">checkout.html</label>&nbsp;&nbsp;&nbsp;<span class="pointer plus hidemobile charcoal largetext" data-toggle="modal" data-target="#videomode4"><i class="mdi mdi-play-circle"></i></span> <span class="xsmalltext aligncenter charcoal">Show me!</span></p>
                    <p class="standardtext charcoal">
                        Enter your page
                        </p>

                    <div class="input-group" style="padding-left:14%;margin-top:-3%;">
                        <input type="text" name="searchRed" id="searchRed" placeholder="Enter your page.html" class="form-control" />
                        <span class="input-group-btn">
                            <button class="btn btn-primary standardtext charcoalbg alignleft" id="btnRed" type="button"> ADD</button>
                        </span>
                    </div>
					
					

                    @*<ul id="redList" class="">

                            <li></li>
                        </ul>*@
                    <br />
                    <table class="tblTagCount redTagsCount">

                        <tbody></tbody>
                    </table>
                    <br />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<div class="modal fade" id="myModalall" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content" style="width:100%;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <p class="radius regulartext whitefont bluebg" style="width: 80%;height: 44px;padding-top: 0.7%;padding-left: 2%;">Referral sources</p>
                <p class="radius standardtext charcoal">This shows the number of visitors from each of these popular referral sources. See which one's provided genuine visitors who explored your site and completed a transaction.</p><br />
                <table id="greenSocial">
                    <tbody>
                        <tr style="background-color:white;"><td class="text-center" style="border: none;width:11.5%;"><img src="/Content/google.png" alt="" title=""><style="border: none;" /><td class="standardtext charcoal" style="width:1%;border: none;width:11.5%">Google</td><td class="standardtext charcoal" style="width:1%;border: none;">Visitors </td><td id="g_all" class="standardtext bluefont" style="width:0.5%;border: none;padding-left:0%;">@count_google_all</td><td class="standardtext charcoal" style="width:14%;border: none;padding-left: 6%;">Genuine visitors</td><td id="g_multi" class="standardtext bluefont" style="width:0.5%;border: none;padding-left: 0%;"> @count_google_multi</td><td style="width:6%;border: none;"></td><td class="standardtext charcoal" style="width:1%;border: none;">Transactions</td><td class="standardtext yellowfont" style="border: none;padding-left: 0%;" id="g_green"> 0</td></tr>
                        <tr style="background-color:white;"><td class="text-center" style="border: none;width:11.5%;"><img src="/Content/facebook.png" alt="" title=""><style="border: none;" /><td class="standardtext charcoal" style="width:1%;border: none;width:11.5%">Facebook</td><td class="standardtext charcoal" style="width:1%;border: none;">Visitors</td><td id="f_all" class="standardtext bluefont" style="width:0.5%;border: none;padding-left:0%;"> @count_facebook_all</td><td class="standardtext charcoal" style="width:14%;padding-left: 6%;border: none;">Genuine visitors</td><td id="f_multi" class="standardtext bluefont" style="width:0.5%;border: none;padding-left: 0%;">@count_facebook_multi</td><td style="width:6%;border: none;"></td><td class="standardtext charcoal" style="width:1%;border: none;">Transactions</td><td class="standardtext yellowfont" style="border: none;padding-left: 0%;" id="f_green">0</td></tr>
                        <tr style="background-color:white;"><td class="text-center" style="border: none;width:11.5%;"><img src="/Content/instagram.png" alt="" title=""><style="border: none;" /><td class="standardtext charcoal" style="width:1%;border: none;width:11.5%">Instagram</td><td class="standardtext charcoal" style="width:1%;border: none;">Visitors</td><td id="i_all" class="standardtext bluefont" style="width:0.5%;border: none;padding-left:0%;">@count_instagram_all</td><td  class="standardtext charcoal"style="width:14%;padding-left: 6%;border: none;">Genuine visitors</td><td id="i_multi" class="standardtext bluefont" style="width:0.5%;border: none;padding-left: 0%;"> @count_instagram_mulit</td><td style="width:6%;border: none;"></td><td class="standardtext charcoal" style="width:1%;border: none;">Transactions</td><td class="standardtext yellowfont" style="border: none;padding-left: 0%;" id="i_green">0</td></tr>
                        <tr style="background-color:white;"><td class="text-center" style="border: none;width:11.5%;"><img src="/Content/bing.png" alt="" title=""><style="border: none;" /><td class="standardtext charcoal" style="width:1%;border: none;width:11.5%">Bing</td><td class="standardtext charcoal" style="width:1%;border: none;">Visitors</td><td id="b_all" class="standardtext bluefont" style="width:0.5%;border: none;padding-left:0%;">@count_bing_all</td><td class="standardtext charcoal" style="width:14%;padding-left: 6%;border: none;">Genuine visitors</td><td id="b_multi" class="standardtext bluefont" style="width:0.5%;border: none;padding-left: 0%;">@count_bing_mulit</td><td style="width:6%;border: none;"></td><td class="standardtext charcoal" style="width:1%;border: none;">Transactions</td><td class="standardtext yellowfont" style="border: none;padding-left: 0%;" id="b_green">0</td></tr>
                        <tr style="background-color:white;"><td class="text-center" style="border: none;width:11.5%;"><img src="/Content/yahoo.png" alt="" title=""><style="border: none;" /><td class="standardtext charcoal" style="width:1%;border: none;width:11.5%">Yahoo</td><td class="standardtext charcoal" style="width:1%;border: none;">Visitors</td><td id="y_all" class="standardtext bluefont" style="width:0.5%;border: none;padding-left:0%;"> @count_yahoo_all</td><td class="standardtext charcoal" style="width:14%;padding-left: 6%;border: none;">Genuine visitors</td><td id="y_multi" class="standardtext bluefont" style="width:0.5%;border: none;padding-left: 0%;"> @count_yahoo_multi</td><td style="width:6%;border: none;"></td><td class="standardtext charcoal" style="width:1%;border: none;">Transactions</td><td class="standardtext yellowfont" style="border: none;padding-left: 0%;" id="y_green">0</td></tr>
                        <tr style="background-color:white;"><td class="text-center" style="border: none;width:11.5%;"><img src="/Content/youtube.png" alt="" title=""><style="border: none;" /><td class="standardtext charcoal" style="width:1%;border: none;width:11.5%">Youtube</td><td class="standardtext charcoal" style="width:1%;border: none;">Visitors</td><td id="you_all" class="standardtext bluefont" style="width:0.5%;border: none;padding-left:0%;"> @count_youtube_all</td><td class="standardtext charcoal" style="width:14%;padding-left: 6%;border: none;">Genuine visitors</td><td id="you_multi" class="standardtext bluefont" style="width:0.5%;border: none;padding-left: 0%;"> @count_youtube_mulit</td><td style="width:6%;border: none;"></td><td class="standardtext charcoal" style="width:1%;border: none;">Transactions</td><td class="standardtext yellowfont" style="border: none;padding-left: 0%;" id="you_green">0</td></tr>
                        <tr style="background-color:white;"><td class="text-center" style="border: none;width:11.5%;"><img src="/Content/linkedin.png" alt="" title=""><style="border: none;" /><td class="standardtext charcoal" style="width:1%;border: none;width:11.5%">Linkedin</td><td class="standardtext charcoal" style="width:1%;border: none;">Visitors</td><td id="link_all" class="standardtext bluefont" style="width:0.5%;border: none;padding-left:0%;"> @count_linkedin_all</td><td class="standardtext charcoal" style="width:14%;padding-left: 6%;border: none;">Genuine visitors</td><td id="link_multi" class="standardtext bluefont" style="width:0.5%;border: none;padding-left: 0%;"> @count_linkedin_mulit</td><td style="width:6%;border: none;"></td><td class="standardtext charcoal" style="width:1%;border: none;">Transactions</td><td class="standardtext yellowfont" style="border: none;padding-left: 0%;" id="link_green">0</td></tr>
                        <tr style="background-color:white;"><td class="text-center" style="border: none;width:11.5%;"><img src="/Content/pinterest.png" alt="" title=""><style="border: none;" /><td class="standardtext charcoal" style="width:1%;border: none;width:11.5%">Pinterest</td><td class="standardtext charcoal" style="width:1%;border: none;">Visitors</td><td id="pinterest_all" class="standardtext bluefont" style="width:0.5%;border: none;padding-left:0%;"> @count_pinterest_all</td><td class="standardtext charcoal" style="width:14%;padding-left: 6%;border: none;">Genuine visitors</td><td id="pinterest_multi" class="standardtext bluefont" style="width:0.5%;border: none;padding-left: 0%;"> @count_pinterest_mulit</td><td style="width:6%;border: none;"></td><td class="standardtext charcoal" style="width:1%;border: none;">Transactions</td><td class="standardtext yellowfont" style="border: none;padding-left: 0%;" id="pinterest_green">0</td></tr>
                        <tr style="background-color:white;"><td class="text-center" style="border: none;width:11.5%;"><img src="/Content/twitter.png" alt="" title=""><style="border: none;" /><td class="standardtext charcoal" style="width:1%;border: none;width:11.5%">Twitter</td><td class="standardtext charcoal" style="width:1%;border: none;">Visitors</td><td id="t_all" class="standardtext bluefont" style="width:0.5%;border: none;padding-left:0%;"> @count_twitter_all</td><td class="standardtext charcoal" style="width:14%;padding-left: 6%;border: none;">Genuine visitors</td><td id="y_multi" class="standardtext bluefont" style="width:0.5%;border: none;padding-left: 0%;"> @count_twitter_multi</td><td style="width:6%;border: none;"></td><td class="standardtext charcoal" style="width:1%;border: none;">Transactions</td><td class="standardtext yellowfont" style="border: none;padding-left: 0%;" id="t_green">0</td></tr>
                    </tbody>
                </table>
                @*<label class="badge badge-danger">example.html</label>*@
            </div>
            
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<div class="modal fade" id="videomodel" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
              
            </div>
            <div class="modal-body">
                
                <div class='embed-container'>
                  <iframe frameborder="0" width="100%" height="800px" src="https://player.vimeo.com/video/403701673"></iframe>
                </div>


            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>

</div>


<div class="modal fade" id="videomode2" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
              
            </div>
            <div class="modal-body">
                
                <div class='embed-container'>
                  <iframe frameborder="0" width="100%" height="800px" src="https://player.vimeo.com/video/404135423"></iframe>
                </div>


            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>

</div>





<div class="modal fade overtop" id="videomode3" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content overtop">
            <div class="modal-header">
              
            </div>
            <div class="modal-body">
                
                <div class='embed-container'>
                  <iframe frameborder="0" width="100%" height="800px" src="https://player.vimeo.com/video/404972223"></iframe>
                </div>


            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>

</div>








<div class="modal fade overtop" id="videomode4" role="dialog">
    <div class="modal-dialog overtop">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
              
            </div>
            <div class="modal-body">
                
                <div class='embed-container'>
                  <iframe frameborder="0" width="100%" height="800px" src="https://player.vimeo.com/video/404995196"></iframe>
                </div>


            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>

</div>








<div class="modal fade" id="videomode5" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
              
            </div>
            <div class="modal-body">
                
                <div class='embed-container'>
                  <iframe frameborder="0" width="100%" height="800px" src="https://player.vimeo.com/video/395927647"></iframe>
                </div>


            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>

</div>






<div class="modal fade" id="videomode6" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
              
            </div>
            <div class="modal-body">
                
                <div class='embed-container'>
                  <iframe frameborder="0" width="100%" height="800px" src="https://player.vimeo.com/video/395927647"></iframe>
                </div>


            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>

</div>






<div class="modal fade" id="videomode7" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
              
            </div>
            <div class="modal-body">
                
                <div class='embed-container'>
                  <iframe frameborder="0" width="100%" height="800px" src="https://player.vimeo.com/video/404809962"></iframe>
                </div>


            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>

</div>

<div class="modal fade" id="videomode8" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
              
            </div>
            <div class="modal-body">
                
                <div class='embed-container'>
                  <iframe frameborder="0" width="100%" height="800px" src="https://player.vimeo.com/video/404805835"></iframe>
                </div>


            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>

</div>



<div class="modal fade" id="videomode9" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
              
            </div>
            <div class="modal-body">
                
                <div class='embed-container'>
                  <iframe frameborder="0" width="100%" height="800px" src="https://player.vimeo.com/video/404801060"></iframe>
                </div>


            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>

</div>



<div class="modal fade" id="videomode10" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
              
            </div>
            <div class="modal-body">
                
                <div class='embed-container'>
                  <iframe frameborder="0" width="100%" height="800px" src="https://player.vimeo.com/video/404787936"></iframe>
                </div>


            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>

</div>











<div class="modal fade" id="myModalBlue" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                @*<p style="color: white;background-color: #a20029;width: 80%;height: 44px;padding-top: 1.5%;padding-left: 2%;border-radius: 4%;font-size: 139%;">Social media campaigns</p>
                    <p style="font-size:12px;">Track and Highlights the <span style="color:#a20029;">ALL</span> your visitors from the following social networking website. Click the check box to add them to your results</p><br />
                    <table id="greenSocial">
                        <tbody>
                            <tr><td class="smalltext" style="width:12%;border: none;">Google</td><td style="width:1%;border: none;">Visitor </td><td id="g_all" style="width:0.5%;border: none;padding-left:0%;color:#a20029;">@count_google_all</td><td style="width:24%;border: none;padding-left: 6%;">Genuine views</td><td id="g_multi" style="width:0.5%;border: none;padding-left: 0%;color: red;"> @count_google_multi</td><td style="width:6%;border: none;"></td><td style="width:1%;border: none;">Transations</td><td style="border: none;padding-left: 0%;color: red;" id="g_green"> 0</td></tr>
                            <tr style="background-color:white;"><td class="text-center" style="border: none;width:11.5%;"><input type="checkbox" class="chkfacebook" style="border: none;" /><td style="width:1%;border: none;">Facebook</td><td style="width:1%;border: none;">Visitor</td><td id="f_all" style="width:0.5%;border: none;padding-left:0%;color:#a20029;"> @count_facebook_all</td><td style="width:24%;padding-left: 6%;border: none;">Genuine views</td><td id="f_multi" style="width:0.5%;border: none;padding-left: 0%;color: red;">@count_facebook_multi</td><td style="width:6%;border: none;"></td><td style="width:1%;border: none;">Transations</td><td style="border: none;padding-left: 0%;color: red;" id="f_green">0</td></tr>
                            <tr><td class="text-center" style="border: none;width:11.5%;"><input type="checkbox" class="chkinstagram" style="border: none;" /><td style="width:1%;border: none;">Instagram</td><td style="width:1%;border: none;">Visitor</td><td id="i_all" style="width:0.5%;border: none;padding-left:0%;color:#a20029;">@count_instagram_all</td><td style="width:24%;padding-left: 6%;border: none;">Genuine views</td><td id="i_multi" style="width:0.5%;border: none;padding-left: 0%;color: red;"> @count_instagram_mulit</td><td style="width:6%;border: none;"></td><td style="width:1%;border: none;">Transations</td><td style="border: none;padding-left: 0%;color: red;" id="i_green">0</td></tr>
                            <tr style="background-color:white;"><td class="text-center" style="border: none;width:11.5%;"><input type="checkbox" class="chkbing" style="border: none;" /><td style="width:1%;border: none;">Bing</td><td style="width:1%;border: none;">Visitor</td><td id="b_all" style="width:0.5%;border: none;padding-left:0%;color:#a20029;">@count_bing_all</td><td style="width:24%;padding-left: 6%;border: none;">Genuine views</td><td id="b_multi" style="width:0.5%;border: none;padding-left: 0%;color: red;">@count_bing_mulit</td><td style="width:6%;border: none;"></td><td style="width:1%;border: none;">Transations</td><td style="border: none;padding-left: 0%;color: red;" id="b_green">0</td></tr>
                            <tr><td class="text-center" style="border: none;width:11.5%;"><input type="checkbox" class="chkyahoo" style="border: none;" /><td style="width:1%;border: none;">Yahoo</td><td style="width:1%;border: none;">Visitor</td><td id="y_all" style="width:0.5%;border: none;padding-left:0%;color:#a20029;"> @count_yahoo_all</td><td style="width:24%;padding-left: 6%;border: none;">Genuine views</td><td id="y_multi" style="width:0.5%;border: none;padding-left: 0%;color: red;"> @count_yahoo_multi</td><td style="width:6%;border: none;"></td><td style="width:1%;border: none;">Transations</td><td style="border: none;padding-left: 0%;color: red;" id="y_green">0</td></tr>
                            <tr style="background-color:white;"><td class="text-center" style="border: none;width:11.5%;"><input type="checkbox" class="chktwitter" style="border: none;" /><td style="width:1%;border: none;">Twitter</td><td style="width:1%;border: none;">Visitor</td><td id="t_all" style="width:0.5%;border: none;padding-left:0%;color:#a20029;"> @count_twitter_all</td><td style="width:24%;padding-left: 6%;border: none;">Genuine views</td><td id="y_multi" style="width:0.5%;border: none;padding-left: 0%;color: red;"> @count_twitter_multi</td><td style="width:6%;border: none;"></td><td style="width:1%;border: none;">Transations</td><td style="border: none;padding-left: 0%;color: red;" id="t_green">0</td></tr>
                        </tbody>
                    </table>*@
                @*<label class="badge badge-danger">example.html</label>*@
            </div>
            <div class="modal-body">
                <div class="form-group ">
                    <p class="radius darkredbg whitefont" style="width: 80%;height: 44px;padding-top: 0.7%;padding-left: 2%;font-size: 139%;">Create tracking links</p><br />
                    <p class="standardtext charcoal">Creating a tracking link is so simple. Just add a ? followed by a word of your choice at the end of your URL. eg.&nbsp; <label class="badge badge-danger standardtext darkredbg">yourwebsite.com?twitter</label>&nbsp;&nbsp;&nbsp;<span class="pointer plus hidemobile charcoal largetext" data-toggle="modal" data-target="#videomode3"><i class="mdi mdi-play-circle"></i></span> <span class="xsmalltext aligncenter charcoal">Show me!</span></p>

                    <p class="standardtext charcoal">
                        Enter your <span class="greenfont">?trackinglink</span>
                        <div class="input-group" style="padding-left:14%;margin-top:-3%;">

                            <input type="text" name="searchBlue" id="searchBlue" placeholder="?enterword" class="form-control" />
                            <span class="input-group-btn">
                                <button class="btn btn-primary standardtext charcoalbg alignleft" id="btnBlue" type="button">ADD</button>
                            </span>
                    </p>
                </div>


                @*<ul id="blueList" class="">

                        <li></li>
                    </ul>*@

                <br />
                <table class="tblTagCount blueTagsCount">

                    <tbody></tbody>
                </table>
                <br />
                @*<table id="greenTagsCount">
                        <thead>
                            <tr><th>TAG</th><th>Google</th><th>Facebook</th><th>Instagram</th><th>Bing</th><th>Yahoo</th></tr>
                        </thead>
                        <tbody></tbody>
                    </table>*@
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>

</div>
</div>

<div class="modal fade" id="myModalPink" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content" style="width:100%;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>


            </div>
            <div class="modal-body">
                <div class="form-group ">
                    <p class="radius redbg whitefont" style="width: 80%;height: 44px;padding-top: 0.7%;padding-left: 2%;font-size: 139%;">Track product pages</p><br />
                    <p class="standardtext charcoal">Enter the end part of your pages URL to track that page. eg.&nbsp; <label class="badge badge-danger redbg">product.html</label>&nbsp;&nbsp;&nbsp;<span class="pointer plus hidemobile charcoal largetext" data-toggle="modal" data-target="#videomode4"><i class="mdi mdi-play-circle"></i></span> <span class="xsmalltext aligncenter charcoal">Show me!</span></p>

                    <p class="standardtext charcoal">
                        Enter your page
                        </p>

                    <div class="input-group" style="padding-left:14%;margin-top:-3%;">
                        <input type="text" name="searchPink" id="searchPink" placeholder="Enter your page.html" class="form-control" />
                        <span class="input-group-btn">
                            <button class="btn btn-primary standardtext charcoalbg alignleft" id="btnPink" type="button"> ADD</button>
                        </span>
						
						
                    </div>
					
		

                    @*<ul id="pinkList" class="">

                            <li></li>
                        </ul>*@
                    <br />
                    <table class="tblTagCount pinkTagsCount">
                        @*<thead>
                                <tr><th>TAG</th><th>ALL Visitor</th><th>MultiPage</th><th>GreenTags</th></tr>
                            </thead>*@
                        <tbody></tbody>
                    </table>
                    <br />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button><br />

            </div>
        </div>

    </div>
</div>

<div class="modal fade" id="myModalGreen" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content" style="width:100%;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>

            </div>
            <div class="modal-body">
                <div class="form-group ">
                    <p class="radius yellowbg whitefont"  style="width: 80%;height: 44px;padding-top: 0.7%;padding-left: 2%;">Track transactions</p><br />
                   <p class="standardtext charcoal">Enter the end part of your payment confirmation pages URL to track that page. eg.&nbsp; <label class="badge badge-danger yellowbg">confirmation.html</label>&nbsp;&nbsp;&nbsp;<span class="pointer plus hidemobile charcoal largetext" data-toggle="modal" data-target="#videomode4"><i class="mdi mdi-play-circle"></i></span> <span class="xsmalltext aligncenter charcoal">Show me!</span></p>

<p class="standardtext charcoal">
                        Enter your page
                        </p>
                    <div class="input-group" style="padding-left:14%;margin-top:-3%;">
                        <input type="text" name="searchGreen" id="searchGreen" placeholder="Enter your page.html" class="form-control" />
                        <span class="input-group-btn">
                            <button class="btn btn-primary standardtext charcoalbg alignleft" id="btnGreen" type="button"> ADD</button>
                        </span>
                    </div>
					
			
					

                    @*<ul id="greenList" class="">

                            <li></li>
                        </ul>*@
                    <br />
                    <table class="tblTagCount greenTagsCount">
                        @*<thead>
                                <tr><th>TAG</th><th>ALL Visitor</th><th>MultiPage</th><th>GreenTags</th></tr>
                            </thead>*@
                        <tbody></tbody>
                    </table>
                    <br />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-tagsinput/0.8.0/bootstrap-tagsinput.min.js"></script>
<script>



    var GetAllKeywords = function () {

        resetDropdowns();

        $(".filterKeywords").removeClass("activated").removeClass("all").removeClass("all2").removeClass("all3").removeClass("all4");
        $($(".filterKeywords")[0]).addClass("activated").removeClass("all").removeClass("all2").removeClass("all3").removeClass("all4");
        if ($("#Search").val().length === 0) {
            $(".panelVisitors").show();
            $("#c_counted1").text($(".panelVisitors").length);

        } else {
            var i = 0;
            var keyWords = $("#Search").val().split(",");
            if (currentCollection.length === 0) {
                $(".panelVisitors").each(function (e, element) {
                    //var sourceTxt = $.trim($(element).find(".txtSource").text().toLowerCase());
                    //var countryTxt = $.trim($(element).find(".txtCountry").text().toLowerCase());
                    //var regionTxt = $.trim($(element).find(".txtRegion").text().toLowerCase());
                    //var cityTxt = $.trim($(element).find(".txtCity").text().toLowerCase());
                    //var mobileTxt = $.trim($(element).find(".txtmobile").text().toLowerCase());

                    var hasValue = false;
                    $(element).find(".pathText").each(function (s, selement) {
                        var urlText = $.trim($(selement).text().toLowerCase());
                        var urlTitle = $.trim($(selement).prev().text().toLowerCase());
                        $.each(keyWords,
                            function (p, pelement) {
                                if (urlText.indexOf(pelement.toLowerCase()) !== -1 ||
                                    urlTitle.indexOf(pelement.toLowerCase()) !== -1) {
                                    //sourceTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                                    //countryTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                                    //regionTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                                    //mobileTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                                    //cityTxt.indexOf(pelement.toLowerCase()) !== -1) {
                                    hasValue = true;
                                }
                            });
                    });
                    if (hasValue) {
                        $(element).show();
                        i = i + 1;
                    } else {
                        $(element).hide();
                    }
                });
                $("#c_counted1").text(i);

            } else {
                $(currentCollection).each(function (e, element) {
                    //var sourceTxt = $.trim($(element).find(".txtSource").text().toLowerCase());
                    //var countryTxt = $.trim($(element).find(".txtCountry").text().toLowerCase());
                    //var regionTxt = $.trim($(element).find(".txtRegion").text().toLowerCase());
                    //var cityTxt = $.trim($(element).find(".txtCity").text().toLowerCase());
                    //var mobileTxt = $.trim($(element).find(".txtmobile").text().toLowerCase());

                    var hasValue = false;
                    $(element).find(".pathText").each(function (s, selement) {
                        var urlText = $.trim($(selement).text().toLowerCase());
                        var urlTitle = $.trim($(selement).prev().text().toLowerCase());
                        $.each(keyWords,
                            function (p, pelement) {
                                if (urlText.indexOf(pelement.toLowerCase()) !== -1 ||
                                    urlTitle.indexOf(pelement.toLowerCase()) !== -1) {
                                    //sourceTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                                    //countryTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                                    //regionTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                                    //mobileTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                                    //cityTxt.indexOf(pelement.toLowerCase()) !== -1) {
                                    hasValue = true;
                                }
                            });
                    });
                    if (hasValue) {
                        $(element).show();
                        i = i + 1;
                    } else {
                        $(element).hide();
                    }
                });
                $("#c_counted1").text(i);
            }
        }
    }

    var GetAllKeywordStatus = function (currentClass) {

        resetDropdowns();

        $(".filterKeywords").removeClass("activated").removeClass("all").removeClass("all2").removeClass("all3").removeClass("all4").removeClass("all5");

        if (currentClass === "img.vistorblue" ) {
            $($(".filterKeywords")[1]).addClass("all").removeClass("activated").removeClass("all2").removeClass("all3").removeClass("all4").removeClass("all5");
        } else if (currentClass === "img.vistorred") {
            $($(".filterKeywords")[2]).addClass("all2").removeClass("activated").removeClass("all").removeClass("all3").removeClass("all4").removeClass("all5");
        } else if (currentClass === "img.vistorgreen") {
            $($(".filterKeywords")[3]).addClass("all3").removeClass("activated").removeClass("all").removeClass("all2").removeClass("all4").removeClass("all5");
        } else if (currentClass === "img.vistorpink") {
            $($(".filterKeywords")[3]).addClass("all5").removeClass("activated").removeClass("all").removeClass("all2").removeClass("all3").removeClass("all4");
        }
         else {
            $($(".filterKeywords")[4]).addClass("all4").removeClass("activated").removeClass("all").removeClass("all2").removeClass("all3").removeClass("all5");;
        }

        if (currentCollection.length === 0) {
            if ($("#Search").val().length === 0) {
                var i = 0;
                $(".panelVisitors").each(function() {
                    var classAvailable = $(this).find(".visitorcollection");
                    var avaibility = $(classAvailable).find(currentClass).length;
                    if (avaibility > 0) {
                        $(this).show();
                        i = i + 1;
                    } else {
                        $(this).hide();
                    }
                });
                $("#c_counted1").text(i);
            } else {
                var i = 0;
                var keyWords = $("#Search").val().split(",");
                $(".panelVisitors").each(function(e, element) {
                    var classAvailable = $(this).find(".visitorcollection");
                    var avaibility = $(classAvailable).find(currentClass).length;
                    if (avaibility > 0) {
                        //var sourceTxt = $.trim($(element).find(".txtSource").text().toLowerCase());
                        //var countryTxt = $.trim($(element).find(".txtCountry").text().toLowerCase());
                        //var regionTxt = $.trim($(element).find(".txtRegion").text().toLowerCase());
                        //var cityTxt = $.trim($(element).find(".txtCity").text().toLowerCase());
                        //var mobileTxt = $.trim($(element).find(".txtmobile").text().toLowerCase());
                        var hasValue = false;
                        $(element).find(".pathText").each(function(s, selement) {
                            var urlText = $.trim($(selement).text().toLowerCase());
                            var urlTitle = $.trim($(selement).prev().text().toLowerCase());
                            $.each(keyWords,
                                function(p, pelement) {
                                    if (urlText.indexOf(pelement.toLowerCase()) !== -1 ||
                                        urlTitle.indexOf(pelement.toLowerCase()) !== -1) {
                                        //sourceTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                                        //countryTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                                        //regionTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                                        //mobileTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                                        //cityTxt.indexOf(pelement.toLowerCase()) !== -1) {
                                        hasValue = true;
                                    }
                                });
                        });
                        if (hasValue) {
                            $(element).show();
                            i = i + 1;
                        } else {
                            $(element).hide();
                        }
                    } else {
                        $(element).hide();
                    }
                });
                $("#c_counted1").text(i);
            }
        } else {
            if ($("#Search").val().length === 0) {
                var i = 0;
                $(currentCollection).each(function () {
                    var classAvailable = $(this).find(".visitorcollection");
                    var avaibility = $(classAvailable).find(currentClass).length;
                    if (avaibility > 0) {
                        $(this).show();
                        i = i + 1;
                    } else {
                        $(this).hide();
                    }
                });
                $("#c_counted1").text(i);
            } else {
                var i = 0;
                var keyWords = $("#Search").val().split(",");
                $(currentCollection).each(function (e, element) {
                    var classAvailable = $(this).find(".visitorcollection");
                    var avaibility = $(classAvailable).find(currentClass).length;
                    if (avaibility > 0) {
                        //var sourceTxt = $.trim($(element).find(".txtSource").text().toLowerCase());
                        //var countryTxt = $.trim($(element).find(".txtCountry").text().toLowerCase());
                        //var regionTxt = $.trim($(element).find(".txtRegion").text().toLowerCase());
                        //var cityTxt = $.trim($(element).find(".txtCity").text().toLowerCase());
                        //var mobileTxt = $.trim($(element).find(".txtmobile").text().toLowerCase());
                        var hasValue = false;
                        $(element).find(".pathText").each(function (s, selement) {
                            var urlText = $.trim($(selement).text().toLowerCase());
                            var urlTitle = $.trim($(selement).prev().text().toLowerCase());
                            $.each(keyWords,
                                function (p, pelement) {
                                    if (urlText.indexOf(pelement.toLowerCase()) !== -1 ||
                                        urlTitle.indexOf(pelement.toLowerCase()) !== -1) {
                                        //sourceTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                                        //countryTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                                        //regionTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                                        //mobileTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                                        //cityTxt.indexOf(pelement.toLowerCase()) !== -1) {
                                        hasValue = true;
                                    }
                                });
                        });
                        if (hasValue) {
                            $(element).show();
                            i = i + 1;
                        } else {
                            $(element).hide();
                        }
                    } else {
                        $(element).hide();
                    }
                });
                $("#c_counted1").text(i);
            }
        }

    }

    $('#myModalGreen').on('hidden.bs.modal',
        function(e) {
            $(this)
                .find("#searchGreen")
                .val('')
                .end();
        });

    $('#myModalBlue').on('hidden.bs.modal',
        function(e) {
            $(this)
                .find("#searchBlue")
                .val('')
                .end();
        });
    $('#myModalall').on('hidden.bs.modal',
        function(e) {
            $(this)
                .find("")
                .val('')
                .end();
        });
     $('#myModalPink').on('hidden.bs.modal',
        function(e) {
            $(this)
                .find("#searchPink")
                .val('')
                .end();
        });

    $('#myModalRed').on('hidden.bs.modal',
        function(e) {
            $(this)
                .find("#searchRed")
                .val('')
                .end();
        });

    $("#btnRed").click(function() {
        $("div#divLoading").addClass('show');
        var tableRow = $("#searchHere tr");
        var text = $.trim($("#searchRed").val());
        if (text.length > 0) {
            var tr = $(".pathText:contains(" + text + ")").parent("div").children(".countColor");
            //alert(tr.text());
            var image = tr.parents(".filter-search").find('.visitor_image');
            if (!tr.hasClass("redBack") && !tr.hasClass("greenBack") && !tr.hasClass("blueBack")) {
                tr.addClass("redBack");
                tr.css("background-color", "red");
                tr.css("color", "red");
            }
            var src = image.attr("src");
            if (src != "" && src != null) {
                if ((src.indexOf("user_green.png") == -1) && (src.indexOf("user_blue.png") == -1)) {
                    //image.attr("src", "/Content/visitor_comparison/user_red.png");
                }
            }
            $.ajax({
                url: "@Url.Action("RedListSearchExists", "ProPackage")",
                method: "POST",
                data: { v: "@Model.domainName", searchText: text },
                success: function(res) {
                    if (res == 1) {
                        alert("You have already enter this keyword. Please enter the new keyword.");
                        $("#searchRed").val("");
                    } else {
                        $.ajax({
                            url: "@Url.Action("AddRed", "ProPackage")",
                            method: "POST",
                            data: { st: text, v: "@Model.domainName" },
                            success: function(res) {
                                //alert(res);
                                $("#searchRed").val("");
                                loadColorList();
                            },
                            error: function(err) {
                                //alert(err);
                            }
                        });
                    }
                },
                error: function(err) {
                    //alert(err);
                }
            });
        }
    });

    $("#btnGreen").click(function() {
        $("div#divLoading").addClass('show');
        var tableRow = $("#searchHere tr");
        var text = $.trim($("#searchGreen").val());
        if (text.length > 0) {

            var tr = $(".pathText:contains(" + text + ")").parent("div").children(".countColor");
            //alert(tr.text());
            var image = tr.parents(".filter-search").find('.visitor_image');
            if (!tr.hasClass("redBack") && !tr.hasClass("greenBack") && !tr.hasClass("blueBack")) {
                tr.addClass("greenBack");
                tr.css("background-color", "green");
                tr.css("color", "green");
                //image.attr("src", "/Content/visitor_comparison/user_green.png");
            }


            $.ajax({
                url: "@Url.Action("GreenListSearchExists", "ProPackage")",
                method: "POST",
                data: { v: "@Model.domainName", searchText: text },
                success: function(res) {
                    if (res == 1) {
                        alert("You have already enter this keyword. Please enter the new keyword.");
                        $("#searchGreen").val("");
                    } else {
                        $.ajax({
                            url: "@Url.Action("AddGreen", "ProPackage")",
                            method: "POST",
                            data: { st: text, v: "@Model.domainName" },
                            success: function(res) {
                                //alert(res);
                                $("#searchGreen").val("");
                                loadColorList();
                            },
                            error: function(err) { /* alert(err.statusText);*/ }
                        });
                    }
                },
                error: function(err) { /*alert(err.statusText);*/ }
            });
        }
    });

    $("#btnBlue").click(function () {
        $("div#divLoading").addClass('show');
        var tableRow = $("#searchHere tr");
        var text = $.trim($("#searchBlue").val());

        if (text.length > 0) {
            var tr = $(".pathText:contains(" + text + ")").parent("div").children(".countColor");
            //alert(tr.text());
            var image = tr.parents(".filter-search").find('.visitor_image');
            if (!tr.hasClass("blueBack") && !tr.hasClass("greenBack") && !tr.hasClass("redBack")) {
                tr.addClass("redBack");
                tr.css("background-color", "red");
                tr.css("color", "red");
            }
            var src = image.attr("src");
            if (src != "" && src != null) {
                if (src.indexOf("user_green.png") == -1) {
                    //image.attr("src", "/Content/visitor_comparison/user_blue.png");
                }
            }
            $.ajax({
                url: "@Url.Action("BlueListSearchExists", "ProPackage")",
                method: "POST",
                data: { v: "@Model.domainName", searchText: text },
                success: function(res) {
                    if (res == 1) {
                        alert("You have already enter this keyword. Please enter the new keyword.");
                        $("#searchBlue").val("");
                    } else {

                        $.ajax({
                            url: "@Url.Action("AddBlue", "ProPackage")",
                            method: "POST",
                            data: { st: text, v: "@Model.domainName" },
                            success: function (res) {
                                //alert(res);
                                $("#searchBlue").val("");
                                loadColorList();
                            },
                            error: function (err) { /*alert(err.statusText);*/ }
                        });
                    }
                },
                error: function (err) { /*alert(err.statusText);*/ }
            });
        }
    });

    $("#btnPink").click(function () {
        $("div#divLoading").addClass('show');
        var tableRow = $("#searchHere tr");
        var text = $("#searchPink").val();

        if (text.length > 0) {
            var tr = $(".pathText:contains(" + text + ")").parent("div").children(".countColor");
            //alert(tr.text());
            var image = tr.parents(".filter-search").find('.visitor_image');
            if (!tr.hasClass("pinkBack") && !tr.hasClass("greenBack") && !tr.hasClass("redBack")) {
                tr.addClass("redBack");
                tr.css("background-color", "red");
                tr.css("color", "red");
            }
            var src = image.attr("src");
            if (src != "" && src != null) {
                if (src.indexOf("user_pink.png") == -1) {
                    //image.attr("src", "/Content/visitor_comparison/user_blue.png");
                }
            }
            $.ajax({
                url: "@Url.Action("PinkListSearchExists", "ProPackage")",
                method: "POST",
                data: { v: "@Model.domainName", searchText: text },
                success: function(res) {
                    if (res == 1) {
                        alert("You have already enter this keyword. Please enter the new keyword.");
                        $("#searchPink").val("");
                    } else {

                        $.ajax({
                            url: "@Url.Action("AddPink", "ProPackage")",
                            method: "POST",
                            data: { st: text, v: "@Model.domainName" },
                            success: function (res) {
                                //alert(res);
                                $("#searchPink").val("");
                                loadColorList();
                            },
                            error: function (err) { /*alert(err.statusText);*/ }
                        });
                    }
                },
                error: function (err) { /*alert(err.statusText);*/ }
            });
        }
    });

        $('#Search').on('itemAdded', function (event) {
            Filteration();
        });

        $('#Search').on('itemRemoved', function (event) {
            Filteration();
        });

    var currentCollection = [];

    //function search() {
    //    currentCollection = [];
    //    var nodes = document.getElementsByClassName('target');
    //    var $tagWord = $("#Search").siblings(".bootstrap-tagsinput").children(".tag");
    //    var tags = [];
    //    for (var i = $tagWord.length; i--;) {
    //        tags.push($($tagWord[i]).text().trim().toLowerCase());
    //    }
    //    if (tags.length > 0) {
    //        $(".filter-search").hide();
    //        $(".filter-search").each(function (i, v) {
    //            for (var cnt = 0, found = 0; cnt < tags.length; cnt++) {
    //                found += $(".target", this).get().some(function (x) { return x.innerText.toLowerCase().includes(tags[cnt]); }) ? 1 : 0;
    //            }
    //            if (found == tags.length) {
    //                $(v).show();
    //                currentCollection.push($(this));
    //            }
    //        });
    //    }
    //    else {
    //        $(".filter-search").show();
    //    }
    //    if ($("#Search").val().length === 0) {
    //        $($(".filterKeywords")[0]).addClass("activated").removeClass("all").removeClass("all2").removeClass("all3").removeClass("all4").removeClass("all5");
    //    }
    //    $("#c_counted1").html('').html($(".filter-search:visible").length);
    //}
</script>

<script type="text/javascript">

    var visitorJson = [];
    var productPageJson = [];
    var checkoutPageJson = [];
    var paymentConfirmationJson = [];
    var pinkPageJson  = [];
    var lineGraphObj;
    var orderCollection = [{ level: 0 , time: "under 1 min", isAvail: false },
    { level: 1 , time: "over 1 min", isAvail: false },
    { level: 2 , time: "over 2 min", isAvail: false },
    { level: 3 , time: "over 3 min", isAvail: false },
    { level: 4 , time: "over 4 min", isAvail: false },
    { level: 5 , time: "over 5 min", isAvail: false }];

    $(document).ready(function () {
        $("div#divLoading").addClass('show');
        lineGraph();
        initalizePieChart();
        loadColorList();
        initAllCheckboxes();

        //location dropdown fill

        if ($("#locationList").val().length > 0) {
            var locationListJson = $("#locationList").val().split(",").sort();
            $(locationListJson).each(function (e, element) {
                $("#drpLocationList").append("<option value='" + element + "'>" + element + "</option>");
            });
        }

        if ($("#sourceList").val().length > 0) {
            var sourceListJson = $("#sourceList").val().split(",").sort();
            $(sourceListJson).each(function (e, element) {
                $("#drpSourceList").append("<option value='" + element + "'>" + element + "</option>");
            });
        }

        if ($("#durationList").val().length > 0) {
            var sourceListJson = $("#durationList").val().split(",").sort();
            $(sourceListJson).each(function (e, element) {
                //$("#drpDurationList").append("<option value='" + element + "'>" + element + "</option>");
                $(orderCollection).each(function (s, selement) {
                    if (!selement.isAvail && selement.time.toLowerCase().trim() === element.toLowerCase().trim()) {
                        selement.isAvail = true;
                    }
                });
            });

            $(orderCollection).each(function (s, element) {
                if (element.isAvail) {
                    $("#drpDurationList").append("<option attr-level='" + element.level + "' value='" + element.time + "'>" + element.time + "</option>");
                }
            });
        }

        //source dropdownfill
        $(".filterDropdown").change(function () {
            Filteration();
            //$('#Search').tagsinput('removeAll');

            //$(".filterKeywords").removeClass("activated").removeClass("all").removeClass("all2").removeClass("all3").removeClass("all4");
            //$($(".filterKeywords")[0]).addClass("activated").removeClass("all").removeClass("all2").removeClass("all3").removeClass("all4");
            //var drpSourceValue = $("#drpSourceList").val();
            //var drpLocationValue = $("#drpLocationList").val();
            //var drpDurationValue = $("#drpDurationList").val();
            //var counter = 0;
            //$(".panelVisitors").show();

            //$(".panelVisitors").each(function () {
            //    var isCounted = false;
            //    var isHide = false;
            //    if (drpLocationValue.length > 0 && drpLocationValue.toLowerCase() !== "all") {
            //        var currentLoopValue = $.trim($(this).find(".txtCity").text());
            //        if (currentLoopValue.length > 0) {
            //            if (currentLoopValue.toLowerCase() === drpLocationValue.toLowerCase()) {
            //                if (!isCounted) {
            //                    counter = counter + 1;
            //                    isCounted = true;
            //                }
            //            } else {
            //                isHide = true;
            //            }
            //        } else {
            //            isHide = true;
            //        }
            //    }

            //    if (drpSourceValue.length > 0 && drpSourceValue.toLowerCase() !== "all" && !isHide) {
            //        var currentLoopValue = $.trim($(this).find(".txtSource").text());
            //        if (currentLoopValue.length > 0) {
            //            if (currentLoopValue.toLowerCase() === drpSourceValue.toLowerCase()) {
            //                if (!isCounted) {
            //                    counter = counter + 1;
            //                    isCounted = true;
            //                }
            //            } else {
            //                isHide = true;
            //            }
            //        } else {
            //            isHide = true;
            //        }
            //    }

            //    if (drpDurationValue.length > 0 && drpDurationValue.toLowerCase() !== "all" && !isHide) {
            //        var currentLoopValue = $.trim($(this).find(".txtDuration").text());
            //        if (currentLoopValue.length > 0) {
            //            if (currentLoopValue.toLowerCase() !== drpDurationValue.toLowerCase()) {
            //                $(this).hide();
            //                isHide = true;
            //            } else {
            //                if (!isCounted) {
            //                    counter = counter + 1;
            //                    isCounted = true;
            //                }
            //            }
            //        } else {
            //            isAllHide = false;
            //        }
            //    }

            //    if (isHide) {
            //        $(this).hide();
            //    }

            //    if (isHide && isCounted) {
            //        counter = counter - 1;
            //    }
            //});

            //$("#c_counted1").text(counter);
        });
    });

        function resetDropdowns() {
            $("#drpLocationList").prop('selectedIndex', 0);
            $("#drpSourceList").prop('selectedIndex', 0);
            $("#drpDurationList").prop('selectedIndex', 0);
        }

    function initAllCheckboxes() {
        $(".chkgoogle").change(function () {
            var multiPageUsers = $("#multiPageUsers").val().split(",");
            var counter = 0;
            var currentValueBlueVisitor = parseInt($("#btnpinkvisitor").text());
            if ($(this).is(":checked")) {
                var currentLoop = $("#multiPageUserArrayGoogle").val().split(",");
                if ($("#multiPageUserArrayGoogle").val().length > 0) {
                    $(currentLoop).each(function () {
                        if (multiPageUsers.indexOf(this) === -1) {
                            counter = counter + 1;
                        }
                    });
                    if (counter > 0) {
                        $("#btnpinkvisitor").text(currentValueBlueVisitor + counter);
                    }
                }
            } else {
                var currentLoop = $("#multiPageUserArrayGoogle").val().split(",");
                if ($("#multiPageUserArrayGoogle").val().length > 0) {
                    $(currentLoop).each(function () {
                        if (multiPageUsers.indexOf(this) === -1) {
                            counter = counter + 1;
                        }
                    });
                    if (counter > 0) {
                        $("#btnpinkvisitor").text(currentValueBlueVisitor - counter);
                    }
                }
            }
        });

        //$(".chkfacebook").change(function () {
        //    var multiPageUsers = $("#multiPageUsers").val().split(",");
        //    var counter = 0;
        //    var currentValueBlueVisitor = parseInt($("#btnbluevisitor").text());
        //    if ($(this).is(":checked")) {
        //        var currentLoop = $("#multiPageUserArrayFacebook").val().split(",");
        //        if ($("#multiPageUserArrayFacebook").val().length > 0) {
        //            $(currentLoop).each(function () {
        //                if (multiPageUsers.indexOf(this) === -1) {
        //                    counter = counter + 1;
        //                }
        //            });
        //            if (counter > 0) {
        //                $("#btnbluevisitor").text(currentValueBlueVisitor + counter);
        //            }
        //        }
        //    } else {
        //        var currentLoop = $("#multiPageUserArrayFacebook").val().split(",");
        //        if ($("#multiPageUserArrayFacebook").val().length > 0) {
        //            $(currentLoop).each(function () {
        //                if (multiPageUsers.indexOf(this) === -1) {
        //                    counter = counter + 1;
        //                }
        //            });
        //            if (counter > 0) {
        //                $("#btnbluevisitor").text(currentValueBlueVisitor - counter);
        //            }
        //        }
        //    }
        //});

        //$(".chkinstagram").change(function () {
        //    var multiPageUsers = $("#multiPageUsers").val().split(",");
        //    var counter = 0;
        //    var currentValueBlueVisitor = parseInt($("#btnbluevisitor").text());
        //    if ($(this).is(":checked")) {
        //        var currentLoop = $("#multiPageUserArrayInstagram").val().split(",");
        //        if ($("#multiPageUserArrayInstagram").val().length > 0) {
        //            $(currentLoop).each(function () {
        //                if (multiPageUsers.indexOf(this) === -1) {
        //                    counter = counter + 1;
        //                }
        //            });
        //            if (counter > 0) {
        //                $("#btnbluevisitor").text(currentValueBlueVisitor + counter);
        //            }
        //        }
        //    } else {
        //        var currentLoop = $("#multiPageUserArrayInstagram").val().split(",");
        //        if ($("#multiPageUserArrayInstagram").val().length > 0) {
        //            $(currentLoop).each(function () {
        //                if (multiPageUsers.indexOf(this) === -1) {
        //                    counter = counter + 1;
        //                }
        //            });
        //            if (counter > 0) {
        //                $("#btnbluevisitor").text(currentValueBlueVisitor - counter);
        //            }
        //        }
        //    }
        //});

        //$(".chkbing").change(function () {
        //    var multiPageUsers = $("#multiPageUsers").val().split(",");
        //    var counter = 0;
        //    var currentValueBlueVisitor = parseInt($("#btnbluevisitor").text());
        //    if ($(this).is(":checked")) {
        //        var currentLoop = $("#multiPageUserArrayBing").val().split(",");
        //        if ($("#multiPageUserArrayBing").val().length > 0) {
        //            $(currentLoop).each(function () {
        //                if (multiPageUsers.indexOf(this) === -1) {
        //                    counter = counter + 1;
        //                }
        //            });
        //            if (counter > 0) {
        //                $("#btnbluevisitor").text(currentValueBlueVisitor + counter);
        //            }
        //        }
        //    } else {
        //        var currentLoop = $("#multiPageUserArrayBing").val().split(",");
        //        if ($("#multiPageUserArrayBing").val().length > 0) {
        //            $(currentLoop).each(function () {
        //                if (multiPageUsers.indexOf(this) === -1) {
        //                    counter = counter + 1;
        //                }
        //            });
        //            if (counter > 0) {
        //                $("#btnbluevisitor").text(currentValueBlueVisitor - counter);
        //            }
        //        }
        //    }
        //});

        //$(".chkyahoo").change(function () {
        //    var multiPageUsers = $("#multiPageUsers").val().split(",");
        //    var counter = 0;
        //    var currentValueBlueVisitor = parseInt($("#btnbluevisitor").text());
        //    if ($(this).is(":checked")) {
        //        var currentLoop = $("#multiPageUserArrayYahoo").val().split(",");
        //        if ($("#multiPageUserArrayYahoo").val().length > 0) {
        //            $(currentLoop).each(function () {
        //                if (multiPageUsers.indexOf(this) === -1) {
        //                    counter = counter + 1;
        //                }
        //            });
        //            if (counter > 0) {
        //                $("#btnbluevisitor").text(currentValueBlueVisitor + counter);
        //            }
        //        }
        //    } else {
        //        var currentLoop = $("#multiPageUserArrayYahoo").val().split(",");
        //        if ($("#multiPageUserArrayYahoo").val().length > 0) {
        //            $(currentLoop).each(function () {
        //                if (multiPageUsers.indexOf(this) === -1) {
        //                    counter = counter + 1;
        //                }
        //            });
        //            if (counter > 0) {
        //                $("#btnbluevisitor").text(currentValueBlueVisitor - counter);
        //            }
        //        }
        //    }
        //});
        // $(".chktwitter").change(function () {
        //    var multiPageUsers = $("#multiPageUsers").val().split(",");
        //    var counter = 0;
        //    var currentValueBlueVisitor = parseInt($("#btnbluevisitor").text());
        //    if ($(this).is(":checked")) {
        //        var currentLoop = $("#multiPageUserArrayTwitter").val().split(",");
        //        if ($("#multiPageUserArrayTwitter").val().length > 0) {
        //            $(currentLoop).each(function () {
        //                if (multiPageUsers.indexOf(this) === -1) {
        //                    counter = counter + 1;
        //                }
        //            });
        //            if (counter > 0) {
        //                $("#btnbluevisitor").text(currentValueBlueVisitor + counter);
        //            }
        //        }
        //    } else {
        //        var currentLoop = $("#multiPageUserArrayTwitter").val().split(",");
        //        if ($("#multiPageUserArrayTwitter").val().length > 0) {
        //            $(currentLoop).each(function () {
        //                if (multiPageUsers.indexOf(this) === -1) {
        //                    counter = counter + 1;
        //                }
        //            });
        //            if (counter > 0) {
        //                $("#btnbluevisitor").text(currentValueBlueVisitor - counter);
        //            }
        //        }
        //    }
        //});
    }

    function initalizePieChart() {
        Highcharts.chart('pieChart', {
            chart: {
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false,
                type: 'pie'
            },
            title: {
                text: ''
            },
            tooltip: {
                pointFormat: ''
            },
            plotOptions: {
                pie: {
                    all2owPointSelect: true,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: false,
                        format: '<b>{point.name}</b>: {point.y}'
                    }
                }
            },
            series: [{

                colorByPoint: true,
                data: [{
                      color: '#00b7f0',

                    y: @Model.userListing.Count
                }, {
                       color: '#006a8b',
                    y: @multipageVisitorCollections.Count
                }]
            }]
        });

        $('.highcharts-credits').remove();
    }



    function lineGraph()
    {
        lineGraphObj = Highcharts.chart('lineGraph',
            {
                title: {
                    text: ''
                },
                xAxis: {
                    tickInterval: 2,
                    categories: [
                        '00:00', '01:00', '02:00', '03:00', '04:00', '05:00',
                        '06:00', '07:00', '08:00', '09:00', '10:00', '11:00',
                        '12:00', '13:00', '14:00', '15:00', '16:00', '17:00',
                        '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'
                    ]
                },
                yAxis: {
                    title: {
                        text: null
                    },
                    plotLines: [
                        {
                            value: 0,
                            width: 1,
                            color: '#808080'
                        }
                    ]
                },
                tooltip: {
                    formatter: function () {
                        return '' +
                            ' <b>' +
                            Highcharts.dateFormat('%A, %e %b %Y', new Date($('#StartDate').val())) +
                            ' ' +
                            Highcharts.dateFormat('%H:%M', this.x) +
                            '</b> <br/>' +
                            this.series.name +
                            ': <b>' +
                            this.y +
                            '<br/>'
                    }
                },
           plotOptions: {
                line: {
                  
                    dataLabels: {
                        enabled: false,
                        
                    }
                }
            },
                legend: {
                    verticalAlign: 'bottom',
                    borderWidth: 0
                },
                series: [
                    {
                        color: '#00b7f0',
                        name: 'Visitors',
                        data: visitorJson,
                        marker: {
                            symbol: 'circle'
                        }
                    },
                    {
                        color: '#00a26d',
                        name: 'Adverts & posts',
                        data: productPageJson,
                        marker: {
                            symbol: 'circle'
                        }
                    },
                    {
                        color: '#ff0044',
                        name: 'Product views',
                        data: pinkPageJson,
                        marker: {
                            symbol: 'circle'
                        }
                    },
                    {
                        color: '#f65b00 ',
                        name: 'Checkout',
                        data: checkoutPageJson,
                        marker: {
                            symbol: 'circle'
                        }
                    },
                    {
                        color: '#ffab25',
                        name: 'Transaction',
                        data: paymentConfirmationJson,
                        marker: {
                            symbol: 'circle'
                        }
                    }
                ]
            });

        $('.highcharts-xaxis-labels').children().find("tspan").html("0:00");
        $('.highcharts-contextbutton').remove();
        $('.highcharts-credits').remove();
        $('.highcharts-button-box').remove();
        $('.highcharts-label').find("text").html("");
    }

    function monthGraph()
    {
        $.ajax({
            url: "@Url.Action("GetMonthlyVisitors", "ProPackage")",
            method: "POST",
            async: false,
            data: { 'date': $("#currentStringDate").val() , 'domain' : '@Model.domainName' },
            success: function (data) {
                var xAxisJson = [];
                $.each(data,
                    function () {
                        xAxisJson.push(this.x);
                    });

                var yAxisJson = [];
                $.each(data,
                    function() {
                        yAxisJson.push(parseInt(this.y));
                    });
                var title = {
                    text: 'Monthly Visitors'
                };
                var xAxis = {
                    tickInterval: 2,
                    categories: xAxisJson
                };
                var yAxis = {
                    title: {
                        text: null
                    },
                    plotLines: [{
                        value: 0,
                        width: 1,
                        color: '#808080'
                    }]
                };
                var tooltip = {
                    formatter: function() {
                        return ''+
                            ' <b>' + this.x + " " + new Date().getFullYear()+'</b> <br/>'
                            + this.series.name +': <b>' + this.y + '<br/>'
                    }
                }
                var legend = {
                    verticalAlign: 'bottom',
                    borderWidth: 0
                };
                var series = [{
                    color: '#cc7a00',
                    name: 'Visitor',
                    data: yAxisJson
                }];

                var json = {};
                json.title = title;
                json.xAxis = xAxis;
                json.yAxis = yAxis;
                json.tooltip = tooltip;
                json.legend = legend;
                json.series = series;
                $('#monthlyGraph').highcharts(json);
                $('.highcharts-label').find("text").html("");
            },
            error: function (err) { alert(err.statusText); }
        });
    }



    var collectionGreenTags = [];
    var googleCount = 0;
    var facebookCount = 0;
    var instagramCount = 0;
    var bingCount = 0;
    var yahooCount = 0;
    var youtubeCount = 0;
    var linkedinCount = 0;
     var pinterestCount = 0;
    function configuredTags() {
        if (collectionGreenTags.length > 0) {
            var tgoogleCount = 0;
            var tfacebookCount = 0;
            var tinstagramCount = 0;
            var tbingCount = 0;
            var tyahooCount = 0;
            var tyoutubeCount = 0;
            var tlinkedinCount = 0;
            var tpinterestCount = 0;
            $("#greenTagsCount").find("tbody").html("");
            $(collectionGreenTags).each(function () {
                googleCount = 0;
                facebookCount = 0;
                instagramCount = 0;
                bingCount = 0;
                yahooCount = 0;
                youtubeCount = 0;
                linkedinCount = 0;
                pinterestCount = 0;
                var currenntTag = $(this)[0].searchtext;
                $(".panelVisitors").each(function (s, pelement) {
                    var isFound = false;
                    var socialType = $(pelement).find(".socialmedia").val();
                    if (socialType.length === 0) {
                        return;
                    }
                    $(this).find(".pathText").each(function (p, selement) {
                        if (!isFound) {
                            var urlText = $.trim($(selement).text().toLowerCase());
                            var urlTitle = $.trim($(selement).prev().text().toLowerCase());
                            if (urlText.indexOf(currenntTag.toLowerCase()) !== -1 ||
                                urlTitle.indexOf(currenntTag.toLowerCase()) !== -1) {
                                if (socialType.toLowerCase() === "google") {
                                    googleCount = googleCount + 1;
                                    tgoogleCount = tgoogleCount + 1;
                                } else if (socialType.toLowerCase() === "facebook") {
                                    facebookCount = facebookCount + 1;
                                    tfacebookCount = tfacebookCount + 1;
                                } else if (socialType.toLowerCase() === "bing") {
                                    bingCount = bingCount + 1;
                                    tbingCount = tbingCount + 1;
                                } else if (socialType.toLowerCase() === "instagram") {
                                    instagramCount = instagramCount + 1;
                                    tinstagramCount = tinstagramCount + 1;
                                }else if (socialType.toLowerCase() === "youtube") {
                                    youtubeCount = youtubeCount + 1;
                                    tyoutubeCount = tyoutubeCount + 1;
                                }
                                    else if (socialType.toLowerCase() === "linkedin") {
                                    linkedinCount = linkedinCount + 1;
                                    tlinkedinCount = tlinkedinCount + 1;
                                }  else if (socialType.toLowerCase() === "pinterest") {
                                    pinterestCount = pinterestCount + 1;
                                    tpinterestCount = tpinterestCount + 1;
                                }
                                else if (socialType.toLowerCase() === "yahoo") {
                                    yahooCount = yahooCount + 1;
                                    tyahooCount = tyahooCount + 1;
                                }
                                isFound = true;
                            }
                        }
                    });
                });

                $("#greenTagsCount").find("tbody").append("<tr><td>" + currenntTag + "</td><td>" + googleCount + "</td><td>" + facebookCount + "</td><td>" + instagramCount + "</td><td>" + bingCount + "</td><td>" + yahooCount + "</td></tr>");
            });

            $("#g_green").html(tgoogleCount);
            $("#f_green").html(tfacebookCount);
            $("#i_green").html(tinstagramCount);
            $("#b_green").html(tbingCount);
            $("#y_green").html(tyahooCount);
            $("#you_green").html(tyoutubeCount);
            $("#link_green").html(tlinkedinCount);
            $("#pinterest_green").html(tpinterestCount);
            


            initializePageCount();
        }
		 else {
             initializePageCount();
        }
    }
</script>

<script>

        var greenTagCollections = [];
        var blueTagCollections = [];
        var redTagCollections = [];
        var pinkTagCollections = [];
        var greenSingleTagCollections = [];
        var blueSingleTagCollections = [];
        var redSingleTagCollections = [];
        var pinkSingleTagCollections = [];

        function initializePageCount() {

            //For blue color
            if (blueTagCollections.length > 0) {
                $(".blueTagsCount").find("tbody").html('');
                var multipageVisitor = 0;
                var allVisitor = 0;
                var greenVisitor = 0;
                var hasValue = false;
                $.each(blueTagCollections, function (t, telement) {
                    multipageVisitor = 0;
                    allVisitor = 0;
                    greenVisitor = 0;
                    $(".panelVisitors").each(function (e, element) {
                        hasValue = false;
                        $(element).find(".pathText").each(function (s, selement) {
                            if (hasValue) {
                                return;
                            } else {
                                var urlText = $.trim($(selement).text().toLowerCase());
                                var urlTitle = $.trim($(selement).prev().text().toLowerCase());
                                if (urlText.indexOf(telement.tagname.toLowerCase()) !== -1 ||
                                    urlTitle.indexOf(telement.tagname.toLowerCase()) !== -1) {
                                    hasValue = true;
                                }

                                if (hasValue) {
                                    //if (collectionGreenTags.length > 0) {
                                    //    $(collectionGreenTags).each(function () {
                                    //        var currenntTag = $(this)[0].searchtext;
                                    //        if (urlText.indexOf(currenntTag.toLowerCase()) !== -1 ||
                                    //            urlTitle.indexOf(currenntTag.toLowerCase()) !== -1) {
                                    //            greenVisitor = greenVisitor + 1;
                                    //        }
                                    //    });
                                    //}

                                    if ($(element).find(".visitorcollection").find("img").hasClass("vistorgreen")) {
                                        greenVisitor = greenVisitor + 1;
                                    }
                                }
                            }
                        });

                        if (hasValue) {
                            allVisitor = allVisitor + 1;
                            if ($(element).find(".visitorSingleType").val() !== "single") {
                                multipageVisitor = multipageVisitor + 1;
                            }
                        }
                    });

                    //For Blue Popup
                    $(".blueTagsCount").find("tbody").append('<tr style="background-color:white;" class="delete_' + telement.id +'"><td style="width: 36%;border: none;"> <button style="background-color: black;color: white;" class="btn"  onclick="deleteId(' + telement.id + ')">Remove</button><div class="badge badge-primary standardtext whitefont darkredbg" style="margin-left: 4%;"><span>' + telement.tagname + '</span></div></td><td class="standardtext charcoal" style="width: 6%;border: none;">All visitors</td><td class="standardtext greenfont" style="padding-left: 0;width: 1%;border: none;">' + allVisitor + '</td><td class="standardtext charcoal" style="width: 14%;padding-left: 5%;border: none;">Genuine visitors</td><td class="standardtext greenfont" style="padding-left:0%;border: none; width: 6%;">' + multipageVisitor + '</td><td class="standardtext charcoal" style="width:8%;border: none;">Transactions</td><td class="standardtext yellowfont" style="padding-left:0%;border: none;">' + greenVisitor + '</td></tr>');
                });
            }

            //For red color
            if (redTagCollections.length > 0) {
                $(".redTagsCount").find("tbody").html('');
                var multipageVisitor = 0;
                var allVisitor = 0;
                var greenVisitor = 0;
                var hasValue = false;
                $.each(redTagCollections, function (t, telement) {
                    multipageVisitor = 0;
                    allVisitor = 0;
                    greenVisitor = 0;
                    $(".panelVisitors").each(function (e, element) {
                        hasValue = false;
                        $(element).find(".pathText").each(function (s, selement) {
                            if (hasValue) {
                                return;
                            } else {
                                var urlText = $.trim($(selement).text().toLowerCase());
                                var urlTitle = $.trim($(selement).prev().text().toLowerCase());
                                if (urlText.indexOf(telement.tagname.toLowerCase()) !== -1 ||
                                    urlTitle.indexOf(telement.tagname.toLowerCase()) !== -1) {
                                    hasValue = true;
                                }

                                if (hasValue) {
                                    //if (collectionGreenTags.length > 0) {
                                    //    $(collectionGreenTags).each(function () {
                                    //        var currenntTag = $(this)[0].searchtext;
                                    //        if (urlText.indexOf(currenntTag.toLowerCase()) !== -1 ||
                                    //            urlTitle.indexOf(currenntTag.toLowerCase()) !== -1) {
                                    //            greenVisitor = greenVisitor + 1;
                                    //        }
                                    //    });
                                    //}

                                    if ($(element).find(".visitorcollection").find("img").hasClass("vistorgreen")) {
                                        greenVisitor = greenVisitor + 1;
                                    }
                                }
                            }
                        });

                        if (hasValue) {
                            allVisitor = allVisitor + 1;
                            if ($(element).find(".visitorSingleType").val() !== "single") {
                                multipageVisitor = multipageVisitor + 1;
                            }
                        }
                    });

                    //For red Popup
                   $(".redTagsCount").find("tbody").append('<tr style="background-color:white;" class="delete_' + telement.id +'"><td style="width: 45%;border: none;"> <button style="background-color: black;color: white;" class="btn" onclick="deleteId(' + telement.id + ')">Remove</button><div class="badge badge-primary standardtext whitefont orangebg" style="margin-left: 4%;"><span>' + telement.tagname + '</span></div></td><td class="standardtext charcoal" style="width: 6%;border: none;">All visitors</td><td style="padding-left: 0;width: 1%;border: none;color:#f65b00 ;">' + allVisitor + '</td><td class="standardtext charcoal" style="width: 14%;padding-left: 5%;border: none;">Genuine visitors</td><td class="standardtext orangefont" style="padding-left:0%;border: none; width: 6%;">' + multipageVisitor + '</td><td class="standardtext charcoal" style="width:6%;border: none;">Transactions</td><td class="standardtext yellowfont" style="padding-left:0%;border: none;">' + greenVisitor + '</td></tr>');
                });
            }

            //For pink color
            if (pinkTagCollections.length > 0) {
                $(".pinkTagsCount").find("tbody").html('');
                var multipageVisitor = 0;
                var allVisitor = 0;
                var greenVisitor = 0;
                var hasValue = false;
                $.each(pinkTagCollections, function (t, telement) {
                    multipageVisitor = 0;
                    allVisitor = 0;
                    greenVisitor = 0;
                    $(".panelVisitors").each(function (e, element) {
                        hasValue = false;
                        $(element).find(".pathText").each(function (s, selement) {
                            if (hasValue) {
                                return;
                            } else {
                                var urlText = $.trim($(selement).text().toLowerCase());
                                var urlTitle = $.trim($(selement).prev().text().toLowerCase());
                                if (urlText.indexOf(telement.tagname.toLowerCase()) !== -1 ||
                                    urlTitle.indexOf(telement.tagname.toLowerCase()) !== -1) {
                                    hasValue = true;
                                }

                                if (hasValue) {
                                    //if (collectionGreenTags.length > 0) {
                                    //    $(collectionGreenTags).each(function () {
                                    //        var currenntTag = $(this)[0].searchtext;
                                    //        if (urlText.indexOf(currenntTag.toLowerCase()) !== -1 ||
                                    //            urlTitle.indexOf(currenntTag.toLowerCase()) !== -1) {
                                    //            greenVisitor = greenVisitor + 1;
                                    //        }
                                    //    });
                                    //}

                                    if ($(element).find(".visitorcollection").find("img").hasClass("vistorgreen")) {
                                        greenVisitor = greenVisitor + 1;
                                    }
                                }
                            }
                        });

                        if (hasValue) {
                            allVisitor = allVisitor + 1;
                            if ($(element).find(".visitorSingleType").val() !== "single") {
                                multipageVisitor = multipageVisitor + 1;
                            }
                        }
                    });

                    //For pink Popup
                   $(".pinkTagsCount").find("tbody").append('<tr style="background-color: white;" class="delete_' + telement.id +'"><td style="width: 45%;border: none;"> <button style="background-color:black;color: white; " class="btn " onclick="deleteId(' + telement.id + ')">Remove</button><div class="badge badge-primary standardtext whitefont redbg" style="margin-left: 4%;"><span>' + telement.tagname + '</span></div></td><td class="standardtext charcoal" style="width: 6%;border: none;">All visitors</td><td class="standardtext redfont" style="padding-left: 0;width: 1%;border: none;">'+ allVisitor + '</td><td class="standardtext charcoal" style="width: 14%;padding-left: 5%;border: none;">Genuine visitors</td><td class="standardtext redfont" style="padding-left:0%;border: none; width: 6%;"> ' + multipageVisitor + '</td><td class="standardtext charcoal" style="width:6%;border: none;">Transactions</td><td class="standardtext yellowfont" style="padding-left:0%;border: none;">'+ greenVisitor + '</td></tr>');
                });
            }

            //For green color
            if (greenTagCollections.length > 0) {
                $(".greenTagsCount").find("tbody").html('');
                var multipageVisitor = 0;
                var allVisitor = 0;
                var greenVisitor = 0;
                var hasValue = false;
                $.each(greenTagCollections, function (t, telement) {
                    multipageVisitor = 0;
                    allVisitor = 0;
                    greenVisitor = 0;
                    $(".panelVisitors").each(function (e, element) {
                        hasValue = false;
                        $(element).find(".pathText").each(function (s, selement) {
                            if (hasValue) {
                                return;
                            } else {
                                var urlText = $.trim($(selement).text().toLowerCase());
                                var urlTitle = $.trim($(selement).prev().text().toLowerCase());
                                if (urlText.indexOf(telement.tagname.toLowerCase()) !== -1 ||
                                    urlTitle.indexOf(telement.tagname.toLowerCase()) !== -1) {
                                    hasValue = true;
                                }

                                if (hasValue) {
                                    //if (collectionGreenTags.length > 0) {
                                    //    $(collectionGreenTags).each(function () {
                                    //        var currenntTag = $(this)[0].searchtext;
                                    //        if (urlText.indexOf(currenntTag.toLowerCase()) !== -1 ||
                                    //            urlTitle.indexOf(currenntTag.toLowerCase()) !== -1) {
                                    //            greenVisitor = greenVisitor + 1;
                                    //        }
                                    //    });
                                    //}

                                    if ($(element).find(".visitorcollection").find("img").hasClass("vistorgreen")) {
                                        greenVisitor = greenVisitor + 1;
                                    }
                                }
                            }
                        });

                        if (hasValue) {
                            allVisitor = allVisitor + 1;
                            if ($(element).find(".visitorSingleType").val() !== "single") {
                                multipageVisitor = multipageVisitor + 1;
                            }
                        }
                    });

                    //For green Popup
                     $(".greenTagsCount").find("tbody").append('<tr style="background-color:white;" class="delete_' + telement.id +'"><td style="width: 10%;border: none;"><button style="background-color: black;color: white;" class="btn" onclick="deleteId(' + telement.id + ')">Remove</button><div class="badge badge-primary standardtext whitefont yellowbg" style="margin-left: 4%;"><span>' + telement.tagname + '</span></div></td><td class="standardtext charcoal" style="width: 12%;border: none;">All visitors <span class="yellowfont">' + allVisitor + '</span></td></tr>');
                });
            }
        }

     function loadColorList() {
         var url = "@Url.Action("GetColorList", "ProPackage")";
        $.ajax({
            url: url + "?v=@Model.domainName",
            success: function (data) {
                $("#blueList").html("");
                $("#redList").html("");
                $("#greenList").html("");
                $("#pinkList").html("");

                collectionGreenTags = [];
                if (data.greenList.length > 0) {
                    collectionGreenTags = data.greenList;
                }

                var visitorPJson = [];
                var productPJson = [];
                var checkoutPJson = [];
                var PinkPageJson = [];
                var paymentConfirmationPJson = [];

                greenTagCollections = [];
                blueTagCollections = [];
                redTagCollections = [];
                pinkTagCollections = [];
                greenSingleTagCollections = [];
                blueSingleTagCollections = [];
                redSingleTagCollections = [];
                pinkSingleTagCollections = [];

                var i = 0;

                var totalgreen = 0;
                var totalred = 0;
                var totalblue = 0;
                var totalpink = 0;

                var isFirsttimegreen = true;
                var isFirsttimered= true;
                var isFirsttimeblue = true;
                var isFirsttimepink = true;

                var userIds = [];

                $(".panelVisitors").each(function (e, element) {

                    isFirsttimegreen = true;
                    isFirsttimered = true;

                    isFirsttimeblue = true;
                    isFirsttimepink = true;
                    var currentUserID = $(element).find(".userID").val();

                    i = i + 1;
                    $(this).find(".visitor-total").text("Visitor " + i);
                    $(this).attr("data-userid", i);
                    var statusColors = [];
                    var priorColor = "";
                    var currentTime = "";
                    if ($(this).find(".sessionStartTime").length > 1) {
                        currentTime = $.trim($($(this).find(".sessionStartTime")[1]).text());
                    } else {
                        currentTime = $.trim($(this).find(".sessionStartTime").text());
                    }

                    $(this).find(".pathText").each(function () {
                        var colorChange = false;
                        var tr = $(this).parent("div").parent("div").find(".countColor");
                        tr.removeClass("dot_2");
                        tr.removeClass("dot_red");

                        tr.removeClass("dot_green");
                        tr.removeClass("dot_blue");
                        tr.removeClass("dot_pink");
                        var currentURL = $.trim($(this).text());
                        if (data.greenList.length > 0) {
                            var greenStr = "";
                            $.each(data.greenList,
                                function () {
                                    greenStr += "<li class='badge badge-success'> <button class='btn btn-sm btn-primary btn_popup_close' onClick='deleteId(" + this.searchid + ")'>X</button><span>" + this.searchtext + "</span></li>";

                                    if ($.inArray(this.searchid, greenSingleTagCollections) === -1) {
                                        greenSingleTagCollections.push(this.searchid);
                                        greenTagCollections.push({
                                            "id": this.searchid,
                                            "tagname": this.searchtext.toLowerCase().trim()
                                        });
                                    }

                                    var isExists = (currentURL.toLowerCase().trim().indexOf(this.searchtext.toLowerCase().trim()) > -1);
                                    if (isExists) {
                                        colorChange = true;

                                        if ($.inArray('dot_green', statusColors) === -1)
                                        {
                                            statusColors.push("dot_green");
                                        }

                                        priorColor = "green";

                                        if (isFirsttimegreen) {
                                            totalgreen++;
                                            isFirsttimegreen = false;
                                        }

                                        tr.addClass("dot_green");

                                        var splitTime = currentTime.split(':');
                                        if (splitTime.length > 0) {
                                            var isObjExist = paymentConfirmationPJson.filter(m => m.userid === i && m.time === parseInt(splitTime[0]));
                                            if (isObjExist.length === 0) {
                                                paymentConfirmationPJson.push({ "userid": i, "time": parseInt(splitTime[0]) });
                                            }
                                        }
                                    }
                                });
                            $("#btngreenvisitor").text(totalgreen);
                            $("#greenList").html(greenStr);
                        } else {
                            $("#btngreenvisitor").text(totalgreen);
                            $("#greenList").html("");
                        }

                        if (data.redList.length > 0) {
                            var redStr = "";
                            $.each(data.redList,
                                function () {
                                    redStr += "<li class='badge badge-danger'> <button class='btn btn-sm btn-primary btn_popup_close' onClick='deleteId(" + this.searchid + ")'>X</button><span>" + this.searchtext + "</span></li>";

                                    if ($.inArray(this.searchid, redSingleTagCollections) === -1) {
                                        redSingleTagCollections.push(this.searchid);
                                        redTagCollections.push({
                                            "id": this.searchid,
                                            "tagname": this.searchtext.toLowerCase().trim()
                                        });
                                    }

                                        var isExists = (currentURL.toLowerCase().trim().indexOf(this.searchtext.toLowerCase().trim()) > -1);
                                    if (isExists) {

                                            if (isFirsttimered) {
                                                totalred++;
                                                isFirsttimered = false;
                                            }

                                            if ($.inArray('dot_red', statusColors) === -1)
                                            {
                                                statusColors.push("dot_red");
                                            }

                                            if (priorColor !== "green") {
                                                priorColor = "red";
                                            }

                                            if (!colorChange) {
                                                tr.addClass("dot_red");
                                                colorChange = true;
                                            }

                                            var splitTime = currentTime.split(':');
                                        if (splitTime.length > 0) {
                                            var isObjExist = checkoutPJson.filter(m => m.userid === i && m.time === parseInt(splitTime[0]));
                                            if (isObjExist.length === 0) {
                                                checkoutPJson.push({ "userid": i, "time": parseInt(splitTime[0]) });
                                            }
                                        }
                                    }
                                });
                            $("#btnredvisitor").text(totalred);
                            $("#redList").html(redStr);
                        } else {
                            $("#btnredvisitor").text(totalred);
                            $("#redList").html("");
                        }

                        if (data.pinkList.length > 0) {
                            var pinkStr = "";
                            $.each(data.pinkList,
                                function () {
                                    pinkStr += "<li class='badge badge-pink'> <button class='btn btn-sm btn-primary btn_popup_close' onClick='deleteId(" + this.searchid + ")'>X</button><span>" + this.searchtext + "</span></li>";

                                    if ($.inArray(this.searchid, pinkSingleTagCollections) === -1) {
                                        pinkSingleTagCollections.push(this.searchid);
                                        pinkTagCollections.push({
                                            "id": this.searchid,
                                            "tagname": this.searchtext.toLowerCase().trim()
                                        });
                                    }

                                    var isExists = (currentURL.toLowerCase().trim().indexOf(this.searchtext.toLowerCase().trim()) > -1);
                                    if (isExists) {

                                        if (isFirsttimepink) {
                                            totalpink++;
                                            isFirsttimepink = false;
                                        }

                                        if ($.inArray('dot_pink', statusColors) === -1) {
                                            statusColors.push("dot_pink");
                                        }

                                        if (priorColor !== "green" || priorColor !== "red") {
                                            priorColor = "pink";
                                        }

                                        if (!colorChange) {
                                            tr.addClass("dot_pink");
                                            colorChange = true;
                                        }

                                        var splitTime = currentTime.split(':');
                                        if (splitTime.length > 0) {
                                            var isObjExist = PinkPageJson.filter(m => m.userid === i && m.time === parseInt(splitTime[0]));
                                            if (isObjExist.length === 0) {
                                                PinkPageJson.push({ "userid": i, "time": parseInt(splitTime[0]) });
                                            }
                                        }
                                    }
                                });
                            $("#btnpinkvisitor").text(totalpink);
                            $("#pinkList").html(pinkStr);
                        } else {
                            $("#btnpinkvisitor").text(totalpink);
                            $("#pinkList").html("");
                        }

                        if (data.blueList.length > 0) {
                            var blueStr = "";
                            $.each(data.blueList,
                                function () {
                                    blueStr += "<li class='badge badge-primary'> <button class='btn btn-sm btn-primary btn_popup_close' onClick='deleteId(" + this.searchid + ")'>X</button><span>" + this.searchtext + "</span></li>";

                                    if ($.inArray(this.searchid, blueSingleTagCollections) === -1) {
                                        blueSingleTagCollections.push(this.searchid);
                                        blueTagCollections.push({
                                            "id": this.searchid,
                                            "tagname": this.searchtext.toLowerCase().trim()
                                        });
                                    }

                                    var isExists = (currentURL.toLowerCase().trim().indexOf(this.searchtext.toLowerCase().trim()) > -1);
                                    if (isExists) {
                                        userIds.push(currentUserID);
                                        if (isFirsttimeblue) {
                                                totalblue++;
                                                isFirsttimeblue = false;
                                            }

                                            if ($.inArray('dot_blue', statusColors) === -1) {
                                                statusColors.push("dot_blue");
                                            }

                                            if (priorColor !== "green" || priorColor !== "red" || priorColor !== "pink") {
                                                priorColor = "blue";
                                            }

                                            if (!colorChange) {
                                                tr.addClass("dot_blue");
                                                colorChange = true;
                                            }

                                            var splitTime = currentTime.split(':');
                                            if (splitTime.length > 0) {
                                                var isObjExist = productPJson.filter(m => m.userid === i && m.time === parseInt(splitTime[0]));
                                                if (isObjExist.length === 0) {
                                                    productPJson.push({ "userid": i, "time": parseInt(splitTime[0]) });
                                                }
                                            }
                                    }
                                });

                            if (userIds.length > 0) {
                                $("#multiPageUsers").val(userIds);
                            }
                            $("#btnbluevisitor").text(totalblue);
                            $("#blueList").html(blueStr);
                        } else {
                            $("#btnbluevisitor").text(totalblue);
                            $("#blueList").html("");
                        }

                        var splitTime = currentTime.split(':');
                        if (splitTime.length > 0) {
                            var isObjExist = visitorPJson.filter(m => m.userid === i && m.time === parseInt(splitTime[0]));
                            if (isObjExist.length === 0) {
                                visitorPJson.push({ "userid": i, "time": parseInt(splitTime[0]) });
                            }
                        }

                        if (!colorChange) {


                            if ($.inArray('dot_2', statusColors) === -1) {
                                statusColors.push("dot_2");
                            }
                            tr.addClass("dot_2");
                        }

                    });

                    //if (priorColor.length > 0) {
                    //    $(element).find(".visitor_image").attr("src",
                    //        "/Content/visitor_comparison/user_" + priorColor +".png");
                    //} else {
                    //    $(element).find(".visitor_image").attr("src",
                    //        "/Content/visitor_comparison/user.png");
                    //}

                    $(element).find(".visitorcollection").html("");

                    if ($.inArray('dot_blue', statusColors) !== -1) {
                        $(element).find(".visitorcollection").append('<img class="user_image visitor_image vistorblue" style="width: 20px;margin-right: 5px;border-radius: 2px;" src="/Content/visitor_comparison/user_blue.png" alt="" title="">');
                    };

                    if ($.inArray('dot_red', statusColors) !== -1) {
                        $(element).find(".visitorcollection").append('<img class="user_image visitor_image vistorred" style="width: 20px;margin-right: 5px;border-radius: 2px;" src="/Content/visitor_comparison/user_red.png" alt="" title="">');
                    };

                    if ($.inArray('dot_pink', statusColors) !== -1) {
                        $(element).find(".visitorcollection").append('<img class="user_image visitor_image vistorpink" style="width: 20px;margin-right: 5px;border-radius: 2px;" src="/Content/visitor_comparison/user_pink.png" alt="" title="">');
                    };

                    if ($.inArray('dot_green', statusColors) !== -1) {
                        $(element).find(".visitorcollection").append('<img class="user_image visitor_image vistorgreen" style="width: 20px;margin-right: 5px;border-radius: 2px;" src="/Content/visitor_comparison/user_green.png" alt="" title="">');
                    };
                });

                visitorJson = [];
                productPageJson = [];
                checkoutPageJson = [];
                pinkPageJson = [];
                paymentConfirmationJson = [];

                for (var i = 0; i < 24; i++) {

                    var totalNormalUser = visitorPJson.filter(m => m.time === i);
                    visitorJson.push(totalNormalUser.length);

                    var totalBlueUser = productPJson.filter(m => m.time === i);
                    productPageJson.push(totalBlueUser.length);

                    var totalRedUser = checkoutPJson.filter(m => m.time === i);
                    checkoutPageJson.push(totalRedUser.length);

                    var totalGreenUser = paymentConfirmationPJson.filter(m => m.time === i);
                    paymentConfirmationJson.push(totalGreenUser.length);

                    var totalPinkUser = PinkPageJson.filter(m => m.time === i);
                    pinkPageJson.push(totalPinkUser.length);

                }

                lineGraphObj.series[0].update({
                    data: visitorJson
                }, true);

                lineGraphObj.series[1].update({
                    data: productPageJson
                }, true);

                lineGraphObj.series[2].update({
                    data: pinkPageJson
                }, true);

                lineGraphObj.series[3].update({
                    data: checkoutPageJson
                }, true);

                lineGraphObj.series[4].update({
                    data: paymentConfirmationJson
                }, true);

                $("div#divLoading").removeClass('show');

                configuredTags();
            },
            error: function (xhr) {
                //Do Something to handle error
            }
        });
    }

    function deleteId(id) {
        $.get("@Url.Action("DeleteIt", "ProPackage")" + "?sid=" + id, function (res) {
            $("tr.delete_" + id).remove();
            loadColorList();
            GetAllKeywords();
        });
    }

</script>

<script>
    function ApplyFilter() {
        var query = '';
        $("div#divLoading").addClass('show');
        var startDate = document.getElementById("StartDate").value;
        if (startDate != null) {
            query += "date=" + startDate;
        }

        if (query !== '') {
            var currentUrl = document.URL.split('#')[0];
            document.location = currentUrl.split('&')[0] + "&" + query;
        }
    }
</script>

<script>
    function ApplyFilter1(id, domainName) {
        $("div#divLoading").addClass('show');
        var customURL = $("#customURL").val();
        var startDate = document.getElementById("StartDate_" + id).value;
        if (startDate !== null) {
            document.location = customURL + "?domainName=" + domainName + "&date=" + startDate;
        } else {
            document.location = customURL + "?domainName=" + domainName;
        }
    }

    function ReportALL() {
        var query = '';
        $("div#divLoading").addClass('show');
        var startDate = document.getElementById("StartDate").value;
        if (startDate != null) {
            query += "date=" + startDate;
        }

        if (query !== '') {
            var currentUrl = document.URL.split('#')[0];
            var newCurrentUrl = currentUrl.replace("Report", "ReportAll");
            document.location = newCurrentUrl.split('&')[0] + "&" + query;
        }
    }
     function Report() {
        var query = '';
        $("div#divLoading").addClass('show');
        var startDate = document.getElementById("StartDate").value;
        if (startDate != null) {
            query += "date=" + startDate;
        }

        if (query !== '') {
            var currentUrl = document.URL.split('#')[0];
            var newCurrentUrl = currentUrl.replace("Report", "ReportAll");
            document.location = newCurrentUrl.split('&')[0] + "&" + query;
        }
    }
</script>

<script>
    function LoadLess(id, obj) {
        $(".earlierVisitor_" + id).removeClass("active");
        $(".hideCollection_" + id).removeClass("active");
        $(obj).text("Show ALL");
        $(obj).attr("onclick", "LoadMore(" + id + " , this)");
    }

    function LoadMore(id, obj) {
        $(".earlierVisitor_" + id).addClass("active");
        $(".hideCollection_" + id).addClass("active");
        $(obj).text("Show Less");
        $(obj).attr("onclick", "LoadLess(" + id + " , this)");
    }
</script>

<script>
    function RemoveAllFilter() {
        resetDropdowns();
        $(".panelVisitors").show();
        $(".filterKeywords").removeClass("activated").removeClass("all").removeClass("all2").removeClass("all3").removeClass("all4").removeClass("all5");
        $($(".filterKeywords")[0]).addClass("activated").removeClass("all").removeClass("all2").removeClass("all3").removeClass("all4").removeClass("all5");
        $("#c_counted1").text($(".panelVisitors").length);
        $('#Search').tagsinput('removeAll');
        selectedColor = "";
    }

    var selectedColor = "";
    function SetFilterColor(clickedColor) {
        if (clickedColor.length > 0) {
            selectedColor = clickedColor;
        }
        Filteration();
    }

    function Filteration() {
        var filterCounter = 0;
        var isCounted = false;
        $(".panelVisitors").show();
        var drpSourceValue = $("#drpSourceList").val();
        var drpLocationValue = $("#drpLocationList").val();
        var drpDurationValue = $("#drpDurationList").val();
        var isLocationSet = false;
        var couterValue = [];
        $(".panelVisitors").each(function (e, element) {
            isCounted = true;
            isHide = false;

            //dropdown filter
            if (drpLocationValue.length > 0 && drpLocationValue.toLowerCase() !== "all") {
                var currentLoopValue = $.trim($(this).find(".txtCity").text());
                if (currentLoopValue.length > 0) {
                    if (currentLoopValue.toLowerCase() !== drpLocationValue.toLowerCase()) {
                        isCounted = false;
                        isHide = true;
                    }
                } else {
                    isCounted = false;
                    isHide = true;
                }
            }

            if (drpSourceValue.length > 0 && drpSourceValue.toLowerCase() !== "all" && !isHide) {
                var currentLoopValue = $.trim($(this).find(".txtSource").text());
                if (currentLoopValue.length > 0) {
                    if (currentLoopValue.toLowerCase() !== drpSourceValue.toLowerCase()) {
                        isCounted = false;
                        isHide = true;
                    }
                } else {
                    isCounted = false;
                    isHide = true;
                }
            }

            if (drpDurationValue.length > 0 && drpDurationValue.toLowerCase() !== "all" && !isHide) {
                var currentLoopValue = $.trim($(this).find(".txtDuration").text());
                if (currentLoopValue.length > 0) {
                    isCounted = false;
                    isHide = true;

                    if (!isLocationSet) {
                        isLocationSet = true;
                        var clevel = $("#drpDurationList option:selected").attr("attr-level");
                        if (clevel === "0") {
                            couterValue.push($("#drpDurationList option:selected").val());
                        } else {
                            $("#drpDurationList option").each(function (k, kelement) {
                                if ($(kelement).attr("value") !== "All") {
                                    var newLevel = $(kelement).attr("attr-level");
                                    var convertedLevel = parseInt(newLevel);
                                    if (convertedLevel >= parseInt(clevel)) {
                                        couterValue.push($(kelement).attr("value"));
                                    }
                                }
                            });
                        }
                    }

                    if (couterValue.length > 0) {
                        $(couterValue).each(function (m, melement) {
                            if (melement.toLowerCase() === currentLoopValue.toLowerCase()) {
                                isCounted = true;
                                isHide = false;
                            }
                        });
                    }
                } else {
                    isCounted = false;
                    isHide = true;
                }
            }

            //using button click
            if (!isHide) {
                if (selectedColor.length > 0) {

                    if (selectedColor === "all") {
                        $(".filterKeywords").removeClass("activated").removeClass("all").removeClass("all2").removeClass("all3").removeClass("all4").removeClass("all5");
                        $($(".filterKeywords")[0]).addClass("activated").removeClass("all").removeClass("all2").removeClass("all3").removeClass("all4").removeClass("all5");
                        $(element).find(".visitorcollection").find("img").each(function (s, selement) {
                            if ($(selement).hasClass("vistorblue")) {
                                colorFound = true;
                            }

                            if (!colorFound && $(selement).hasClass("vistorpink")) {
                                colorFound = true;
                            }

                            if (!colorFound && $(selement).hasClass("vistorred")) {
                                colorFound = true;
                            }

                            if (!colorFound && $(selement).hasClass("vistorgreen")) {
                                colorFound = true;
                            }
                        });

                        if (!colorFound) {
                            isCounted = false;
                            isHide = true;
                        }

                    } else {
                        $(".filterKeywords").removeClass("activated").removeClass("all").removeClass("all2").removeClass("all3").removeClass("all4").removeClass("all5");
                        var currentClass = "";
                        var colorFound = false;
                        if (selectedColor === "blue") {
                            $($(".filterKeywords")[1]).addClass("all").removeClass("activated").removeClass("all2").removeClass("all3").removeClass("all4").removeClass("all5");
                            currentClass = "vistorblue";
                        } else if (selectedColor === "pink") {
                            $($(".filterKeywords")[2]).addClass("all5").removeClass("activated").removeClass("all").removeClass("all2").removeClass("all3").removeClass("all4");
                            currentClass = "vistorpink";
                        } else if (selectedColor === "red") {
                            $($(".filterKeywords")[3]).addClass("all2").removeClass("activated").removeClass("all").removeClass("all3").removeClass("all4").removeClass("all5");
                            currentClass = "vistorred";
                        } else if (selectedColor === "green") {
                            $($(".filterKeywords")[4]).addClass("all3").removeClass("activated").removeClass("all").removeClass("all2").removeClass("all4").removeClass("all5");
                            currentClass = "vistorgreen";
                        }

                        $(element).find(".visitorcollection").find("img").each(function (s, selement) {
                            if ($(selement).hasClass(currentClass)) {
                                colorFound = true;
                            }
                        });

                        if (!colorFound) {
                            isCounted = false;
                            isHide = true;
                        }
                    }
                }
            }

            //using search filter
            if (!isHide) {
                var $tagWord = $("#Search").siblings(".bootstrap-tagsinput").children(".tag");
                var tags = [];
                for (var i = $tagWord.length; i--;) {
                    tags.push($($tagWord[i]).text().trim().toLowerCase());
                }
                if (tags.length > 0) {
                    //var isSearchFound = true;
                    //var sourceTxt = $.trim($(element).find(".txtSource").text().toLowerCase());
                    //var countryTxt = $.trim($(element).find(".txtCountry").text().toLowerCase());
                    //var regionTxt = $.trim($(element).find(".txtRegion").text().toLowerCase());
                    //var cityTxt = $.trim($(element).find(".txtCity").text().toLowerCase());
                    //var mobileTxt = $.trim($(element).find(".txtmobile").text().toLowerCase());

                    for (var cnt = 0, found = 0; cnt < tags.length; cnt++) {
                        found += $(".target", this).get().some(function (x) { return x.innerText.toLowerCase().includes(tags[cnt]); }) ? 1 : 0;
                    }
                    if (found !== tags.length) {
                        isCounted = false;
                        isHide = true;
                    }

                    //$.each(tags, function (p, pelement) {
                    //    $(element).find(".pathText").each(function (s, selement) {
                    //        var urlText = $.trim($(selement).text().toLowerCase());
                    //        var urlTitle = $.trim($(selement).prev().text().toLowerCase());
                    //        if (urlText.indexOf(pelement.toLowerCase()) !== -1 ||
                    //            urlTitle.indexOf(pelement.toLowerCase()) !== -1) {
                    //            //sourceTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                    //            //countryTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                    //            //regionTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                    //            //mobileTxt.indexOf(pelement.toLowerCase()) !== -1 ||
                    //            //cityTxt.indexOf(pelement.toLowerCase()) !== -1) {
                    //            //isSearchFound = true;
                    //        } else {
                    //            isSearchFound = fal;
                    //        }
                    //    });
                    //});

                    //if (!isSearchFound) {

                    //    isCounted = false;
                    //    isHide = true;
                    //}
                }
            }

            if (!isCounted) {
                $(this).hide();
            } else {
                filterCounter = filterCounter + 1;
            }
        });
        $("#c_counted1").text(filterCounter);
    }
</script>